{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12","program":"/home/kobruh/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","crossbeam_utils","--edition=2018","/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=b939e66b668d099e","-C","extra-filename=-b939e66b668d099e","--out-dir","/home/kobruh/Projects/RASCII/target/rls/debug/deps","-L","dependency=/home/kobruh/Projects/RASCII/target/rls/debug/deps","--extern","cfg_if=/home/kobruh/Projects/RASCII/target/rls/debug/deps/libcfg_if-87c284443f3cd509.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/kobruh/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/kobruh/Projects/RASCII/target/rls/debug/deps/libcrossbeam_utils-b939e66b668d099e.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_utils","disambiguator":[17890554118173803039,0]},"crate_root":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src","external_crates":[{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[18009504021925498586,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4529231008568630066,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6454353934602915994,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4068501274341658802,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6477578750782050620,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[8891903781499800355,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[5820604803307051361,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[8495696488133152618,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[573130743634949162,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[194626158685852222,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[6912020744921273940,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6083063236018227814,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[4457149757231420433,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[17193898272045318619,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[16816495372639671287,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[18018821183479052995,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[8471467948192562461,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[10516304001967857410,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[14599081442512269196,0]}},{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","num":20,"id":{"name":"cfg_if","disambiguator":[16971327672742534159,0]}}],"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":101},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/mod.rs","byte_start":4726,"byte_end":4736,"line_start":36,"line_end":36,"column_start":28,"column_end":38},"alias_span":null,"name":"AtomicCell","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":181},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/mod.rs","byte_start":4761,"byte_end":4774,"line_start":37,"line_end":37,"column_start":24,"column_end":37},"alias_span":null,"name":"AtomicConsume","value":"","parent":{"krate":0,"index":57}},{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":3132,"byte_end":3143,"line_start":90,"line_end":90,"column_start":30,"column_end":41},"alias_span":null,"name":"CachePadded","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":242},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":3183,"byte_end":3190,"line_start":93,"line_end":93,"column_start":25,"column_end":32},"alias_span":null,"name":"Backoff","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14220887,"byte_end":14220893,"line_start":14,"line_end":14,"column_start":24,"column_end":30},"alias_span":null,"name":"Parker","value":"","parent":{"krate":0,"index":479}},{"kind":"Use","ref_id":{"krate":0,"index":565},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14220895,"byte_end":14220903,"line_start":14,"line_end":14,"column_start":32,"column_end":40},"alias_span":null,"name":"Unparker","value":"","parent":{"krate":0,"index":479}},{"kind":"Use","ref_id":{"krate":0,"index":660},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14220963,"byte_end":14220974,"line_start":16,"line_end":16,"column_start":30,"column_end":41},"alias_span":null,"name":"ShardedLock","value":"","parent":{"krate":0,"index":479}},{"kind":"Use","ref_id":{"krate":0,"index":698},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14220976,"byte_end":14220996,"line_start":16,"line_end":16,"column_start":43,"column_end":63},"alias_span":null,"name":"ShardedLockReadGuard","value":"","parent":{"krate":0,"index":479}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14220998,"byte_end":14221019,"line_start":16,"line_end":16,"column_start":65,"column_end":86},"alias_span":null,"name":"ShardedLockWriteGuard","value":"","parent":{"krate":0,"index":479}},{"kind":"Use","ref_id":{"krate":0,"index":767},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14221048,"byte_end":14221057,"line_start":17,"line_end":17,"column_start":27,"column_end":36},"alias_span":null,"name":"WaitGroup","value":"","parent":{"krate":0,"index":479}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":0,"byte_end":3347,"line_start":1,"line_end":104,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":57},{"krate":0,"index":195},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":479},{"krate":0,"index":803}],"decl_id":null,"docs":" Miscellaneous tools for concurrent programming.","sig":null,"attributes":[{"value":"/ Miscellaneous tools for concurrent programming.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Atomics","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":56,"byte_end":70,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":71,"byte_end":74,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":75,"byte_end":135,"line_start":5,"line_end":5,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":136,"byte_end":225,"line_start":6,"line_end":6,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":226,"byte_end":229,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Thread synchronization","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":230,"byte_end":259,"line_start":8,"line_end":8,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":260,"byte_end":263,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":264,"byte_end":309,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":310,"byte_end":389,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":390,"byte_end":470,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":471,"byte_end":474,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ## Utilities","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":475,"byte_end":491,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":492,"byte_end":495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * [`Backoff`], for exponential backoff in spin loops.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":496,"byte_end":553,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ * [`CachePadded`], for padding and aligning a value to the length of a cache line.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":554,"byte_end":640,"line_start":17,"line_end":17,"column_start":1,"column_end":87}},{"value":"/ * [`scope`], for spawning threads that borrow local variables from the stack.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":641,"byte_end":722,"line_start":18,"line_end":18,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":723,"byte_end":726,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AtomicCell`]: atomic::AtomicCell","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":727,"byte_end":765,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/ [`AtomicConsume`]: atomic::AtomicConsume","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":766,"byte_end":810,"line_start":21,"line_end":21,"column_start":1,"column_end":45}},{"value":"/ [`Parker`]: sync::Parker","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":811,"byte_end":839,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/ [`ShardedLock`]: sync::ShardedLock","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":840,"byte_end":878,"line_start":23,"line_end":23,"column_start":1,"column_end":39}},{"value":"/ [`WaitGroup`]: sync::WaitGroup","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":879,"byte_end":913,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ [`scope`]: thread::scope","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":914,"byte_end":942,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":1103,"byte_end":1209,"line_start":34,"line_end":39,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":57},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"atomic","qualname":"::atomic","value":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/mod.rs","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":58},{"krate":0,"index":177},{"krate":0,"index":189},{"krate":0,"index":192}],"decl_id":null,"docs":" Atomic types.","sig":null,"attributes":[{"value":"/ Atomic types.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/mod.rs","byte_start":3349,"byte_end":3366,"line_start":1,"line_end":1,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/mod.rs","byte_start":3367,"byte_end":3370,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`AtomicCell`], a thread-safe mutable memory location.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/mod.rs","byte_start":3371,"byte_end":3431,"line_start":3,"line_end":3,"column_start":1,"column_end":61}},{"value":"/ * [`AtomicConsume`], for reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/mod.rs","byte_start":3432,"byte_end":3521,"line_start":4,"line_end":4,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":101},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5905,"byte_end":5915,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"AtomicCell","qualname":"::atomic::atomic_cell::AtomicCell","value":"AtomicCell {  }","parent":null,"children":[{"krate":0,"index":103}],"decl_id":null,"docs":" A thread-safe mutable memory location.","sig":null,"attributes":[{"value":"/ A thread-safe mutable memory location.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5184,"byte_end":5226,"line_start":18,"line_end":18,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5227,"byte_end":5230,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This type is equivalent to [`Cell`], except it can also be shared among multiple threads.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5231,"byte_end":5324,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5325,"byte_end":5328,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Operations on `AtomicCell`s use atomic instructions whenever possible, and synchronize using","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5329,"byte_end":5425,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ global locks otherwise. You can call [`AtomicCell::<T>::is_lock_free()`] to check whether","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5426,"byte_end":5519,"line_start":23,"line_end":23,"column_start":1,"column_end":94}},{"value":"/ atomic instructions or locks will be used.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5520,"byte_end":5566,"line_start":24,"line_end":24,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5567,"byte_end":5570,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Atomic loads use the [`Acquire`] ordering and atomic stores use the [`Release`] ordering.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5571,"byte_end":5664,"line_start":26,"line_end":26,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5665,"byte_end":5668,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [`Cell`]: std::cell::Cell","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5669,"byte_end":5698,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/ [`AtomicCell::<T>::is_lock_free()`]: AtomicCell::is_lock_free","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5699,"byte_end":5764,"line_start":29,"line_end":29,"column_start":1,"column_end":66}},{"value":"/ [`Acquire`]: std::sync::atomic::Ordering::Acquire","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5765,"byte_end":5818,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ [`Release`]: std::sync::atomic::Ordering::Release","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5819,"byte_end":5872,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"repr(transparent)","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":5873,"byte_end":5893,"line_start":32,"line_end":32,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7071,"byte_end":7074,"line_start":67,"line_end":67,"column_start":18,"column_end":21},"name":"new","qualname":"<AtomicCell<T>>::new","value":"const fn new(T) -> AtomicCell<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new atomic cell initialized with `val`.","sig":null,"attributes":[{"value":"/ Creates a new atomic cell initialized with `val`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6848,"byte_end":6901,"line_start":58,"line_end":58,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6906,"byte_end":6909,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6914,"byte_end":6928,"line_start":60,"line_end":60,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6933,"byte_end":6936,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6941,"byte_end":6948,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6953,"byte_end":6997,"line_start":63,"line_end":63,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7002,"byte_end":7005,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7010,"byte_end":7041,"line_start":65,"line_end":65,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7046,"byte_end":7053,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7635,"byte_end":7645,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AtomicCell<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the atomic and returns the contained value.","sig":null,"attributes":[{"value":"/ Consumes the atomic and returns the contained value.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7203,"byte_end":7259,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7264,"byte_end":7267,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This is safe because passing `self` by value guarantees that no other threads are","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7272,"byte_end":7357,"line_start":75,"line_end":75,"column_start":5,"column_end":90}},{"value":"/ concurrently accessing the atomic data.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7362,"byte_end":7405,"line_start":76,"line_end":76,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7410,"byte_end":7413,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7418,"byte_end":7432,"line_start":78,"line_end":78,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7437,"byte_end":7440,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7445,"byte_end":7452,"line_start":80,"line_end":80,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7457,"byte_end":7501,"line_start":81,"line_end":81,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7506,"byte_end":7509,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7514,"byte_end":7545,"line_start":83,"line_end":83,"column_start":5,"column_end":36}},{"value":"/ let v = a.into_inner();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7550,"byte_end":7577,"line_start":84,"line_end":84,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7582,"byte_end":7585,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v, 7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7590,"byte_end":7611,"line_start":86,"line_end":86,"column_start":5,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":7616,"byte_end":7623,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9267,"byte_end":9279,"line_start":126,"line_end":126,"column_start":18,"column_end":30},"name":"is_lock_free","qualname":"<AtomicCell<T>>::is_lock_free","value":"const fn is_lock_free() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if operations on values of this type are lock-free.","sig":null,"attributes":[{"value":"/ Returns `true` if operations on values of this type are lock-free.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8043,"byte_end":8113,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8118,"byte_end":8121,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ If the compiler or the platform doesn't support the necessary atomic instructions,","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8126,"byte_end":8212,"line_start":100,"line_end":100,"column_start":5,"column_end":91}},{"value":"/ `AtomicCell<T>` will use global locks for every potentially concurrent atomic operation.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8217,"byte_end":8309,"line_start":101,"line_end":101,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8314,"byte_end":8317,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8322,"byte_end":8336,"line_start":103,"line_end":103,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8341,"byte_end":8344,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8349,"byte_end":8356,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8361,"byte_end":8405,"line_start":106,"line_end":106,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8410,"byte_end":8413,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ // This type is internally represented as `AtomicUsize` so we can just use atomic","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8418,"byte_end":8503,"line_start":108,"line_end":108,"column_start":5,"column_end":90}},{"value":"/ // operations provided by it.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8508,"byte_end":8541,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(AtomicCell::<usize>::is_lock_free(), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8546,"byte_end":8604,"line_start":110,"line_end":110,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8609,"byte_end":8612,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ // A wrapper struct around `isize`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8617,"byte_end":8656,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/ struct Foo {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8661,"byte_end":8677,"line_start":113,"line_end":113,"column_start":5,"column_end":21}},{"value":"/     bar: isize,","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8682,"byte_end":8701,"line_start":114,"line_end":114,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8706,"byte_end":8711,"line_start":115,"line_end":115,"column_start":5,"column_end":10}},{"value":"/ // `AtomicCell<Foo>` will be internally represented as `AtomicIsize`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8716,"byte_end":8789,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(AtomicCell::<Foo>::is_lock_free(), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8794,"byte_end":8850,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8855,"byte_end":8858,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ // Operations on zero-sized types are always lock-free.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8863,"byte_end":8922,"line_start":119,"line_end":119,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(AtomicCell::<()>::is_lock_free(), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8927,"byte_end":8982,"line_start":120,"line_end":120,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8987,"byte_end":8990,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ // Very large types cannot be represented as any of the standard atomic types, so atomic","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":8995,"byte_end":9087,"line_start":122,"line_end":122,"column_start":5,"column_end":97}},{"value":"/ // operations on them will have to use global locks for synchronization.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9092,"byte_end":9168,"line_start":123,"line_end":123,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(AtomicCell::<[u8; 1000]>::is_lock_free(), false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9173,"byte_end":9237,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9242,"byte_end":9249,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9634,"byte_end":9639,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"store","qualname":"<AtomicCell<T>>::store","value":"fn store(&Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9338,"byte_end":9376,"line_start":130,"line_end":130,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9381,"byte_end":9384,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9389,"byte_end":9403,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9408,"byte_end":9411,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9416,"byte_end":9423,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9428,"byte_end":9472,"line_start":135,"line_end":135,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9477,"byte_end":9480,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9485,"byte_end":9516,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9521,"byte_end":9524,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9529,"byte_end":9557,"line_start":139,"line_end":139,"column_start":5,"column_end":33}},{"value":"/ a.store(8);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9562,"byte_end":9577,"line_start":140,"line_end":140,"column_start":5,"column_end":20}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9582,"byte_end":9610,"line_start":141,"line_end":141,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9615,"byte_end":9622,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10191,"byte_end":10195,"line_start":166,"line_end":166,"column_start":12,"column_end":16},"name":"swap","qualname":"<AtomicCell<T>>::swap","value":"fn swap(&Self, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Stores `val` into the atomic cell and returns the previous value.","sig":null,"attributes":[{"value":"/ Stores `val` into the atomic cell and returns the previous value.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9850,"byte_end":9919,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9924,"byte_end":9927,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9932,"byte_end":9946,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9951,"byte_end":9954,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9959,"byte_end":9966,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":9971,"byte_end":10015,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10020,"byte_end":10023,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10028,"byte_end":10059,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10064,"byte_end":10067,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10072,"byte_end":10100,"line_start":162,"line_end":162,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(a.swap(8), 7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10105,"byte_end":10134,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(a.load(), 8);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10139,"byte_end":10167,"line_start":164,"line_end":164,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10172,"byte_end":10179,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10565,"byte_end":10571,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<AtomicCell<T>>::as_ptr","value":"fn as_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the underlying data in this atomic cell.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the underlying data in this atomic cell.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10280,"byte_end":10349,"line_start":170,"line_end":170,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10354,"byte_end":10357,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10362,"byte_end":10376,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10381,"byte_end":10384,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10389,"byte_end":10396,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10401,"byte_end":10445,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10450,"byte_end":10453,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10458,"byte_end":10489,"line_start":177,"line_end":177,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10494,"byte_end":10497,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let ptr = a.as_ptr();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10502,"byte_end":10527,"line_start":179,"line_end":179,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10532,"byte_end":10539,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10544,"byte_end":10553,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11025,"byte_end":11029,"line_start":201,"line_end":201,"column_start":12,"column_end":16},"name":"take","qualname":"<AtomicCell<T>>::take","value":"fn take(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Takes the value of the atomic cell, leaving `Default::default()` in its place.","sig":null,"attributes":[{"value":"/ Takes the value of the atomic cell, leaving `Default::default()` in its place.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10674,"byte_end":10756,"line_start":188,"line_end":188,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10761,"byte_end":10764,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10769,"byte_end":10783,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10788,"byte_end":10791,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10796,"byte_end":10803,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10808,"byte_end":10852,"line_start":193,"line_end":193,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10857,"byte_end":10860,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(5);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10865,"byte_end":10896,"line_start":195,"line_end":195,"column_start":5,"column_end":36}},{"value":"/ let five = a.take();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10901,"byte_end":10925,"line_start":196,"line_end":196,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10930,"byte_end":10933,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(five, 5);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10938,"byte_end":10962,"line_start":198,"line_end":198,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(a.into_inner(), 0);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10967,"byte_end":11001,"line_start":199,"line_end":199,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11006,"byte_end":11013,"line_start":200,"line_end":200,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11369,"byte_end":11373,"line_start":218,"line_end":218,"column_start":12,"column_end":16},"name":"load","qualname":"<AtomicCell<T>>::load","value":"fn load(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Loads a value from the atomic cell.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic cell.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11125,"byte_end":11164,"line_start":207,"line_end":207,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11169,"byte_end":11172,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11177,"byte_end":11191,"line_start":209,"line_end":209,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11196,"byte_end":11199,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11204,"byte_end":11211,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11216,"byte_end":11260,"line_start":212,"line_end":212,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11265,"byte_end":11268,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11273,"byte_end":11304,"line_start":214,"line_end":214,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11309,"byte_end":11312,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.load(), 7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11317,"byte_end":11345,"line_start":216,"line_end":216,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11350,"byte_end":11357,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12169,"byte_end":12185,"line_start":245,"line_end":245,"column_start":12,"column_end":28},"name":"compare_and_swap","qualname":"<AtomicCell<T>>::compare_and_swap","value":"fn compare_and_swap(&Self, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11482,"byte_end":11559,"line_start":224,"line_end":224,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11564,"byte_end":11567,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ The return value is always the previous value. If it is equal to `current`, then the value","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11572,"byte_end":11666,"line_start":226,"line_end":226,"column_start":5,"column_end":99}},{"value":"/ was updated.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11671,"byte_end":11687,"line_start":227,"line_end":227,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11692,"byte_end":11695,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11700,"byte_end":11714,"line_start":229,"line_end":229,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11719,"byte_end":11722,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11727,"byte_end":11734,"line_start":231,"line_end":231,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11739,"byte_end":11766,"line_start":232,"line_end":232,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11771,"byte_end":11815,"line_start":233,"line_end":233,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11820,"byte_end":11823,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11828,"byte_end":11859,"line_start":235,"line_end":235,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11864,"byte_end":11867,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(2, 3), 1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11872,"byte_end":11916,"line_start":237,"line_end":237,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11921,"byte_end":11949,"line_start":238,"line_end":238,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11954,"byte_end":11957,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_and_swap(1, 2), 1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11962,"byte_end":12006,"line_start":240,"line_end":240,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12011,"byte_end":12039,"line_start":241,"line_end":241,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12044,"byte_end":12051,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12103,"byte_end":12157,"line_start":244,"line_end":244,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12967,"byte_end":12983,"line_start":270,"line_end":270,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<AtomicCell<T>>::compare_exchange","value":"fn compare_exchange(&Self, T, T) -> Result<T, T>","parent":null,"children":[],"decl_id":null,"docs":" If the current value equals `current`, stores `new` into the atomic cell.","sig":null,"attributes":[{"value":"/ If the current value equals `current`, stores `new` into the atomic cell.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12342,"byte_end":12419,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12424,"byte_end":12427,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new value was written and containing","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12432,"byte_end":12524,"line_start":254,"line_end":254,"column_start":5,"column_end":97}},{"value":"/ the previous value. On success this value is guaranteed to be equal to `current`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12529,"byte_end":12614,"line_start":255,"line_end":255,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12619,"byte_end":12622,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12627,"byte_end":12641,"line_start":257,"line_end":257,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12646,"byte_end":12649,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12654,"byte_end":12661,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12666,"byte_end":12710,"line_start":260,"line_end":260,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12715,"byte_end":12718,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12723,"byte_end":12754,"line_start":262,"line_end":262,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12759,"byte_end":12762,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(2, 3), Err(1));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12767,"byte_end":12816,"line_start":264,"line_end":264,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.load(), 1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12821,"byte_end":12849,"line_start":265,"line_end":265,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12854,"byte_end":12857,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.compare_exchange(1, 2), Ok(1));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12862,"byte_end":12910,"line_start":267,"line_end":267,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a.load(), 2);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12915,"byte_end":12943,"line_start":268,"line_end":268,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":12948,"byte_end":12955,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13976,"byte_end":13988,"line_start":294,"line_end":294,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<AtomicCell<T>>::fetch_update","value":"fn fetch_update<F>(&Self, F) -> Result<T, T> where F: FnMut(T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the value, and applies a function to it that returns an optional\n new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else\n `Err(previous_value)`.","sig":null,"attributes":[{"value":"/ Fetches the value, and applies a function to it that returns an optional","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13117,"byte_end":13193,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ new value. Returns a `Result` of `Ok(previous_value)` if the function returned `Some(_)`, else","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13198,"byte_end":13296,"line_start":275,"line_end":275,"column_start":5,"column_end":103}},{"value":"/ `Err(previous_value)`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13301,"byte_end":13327,"line_start":276,"line_end":276,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13332,"byte_end":13335,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note: This may call the function multiple times if the value has been changed from other threads in","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13340,"byte_end":13443,"line_start":278,"line_end":278,"column_start":5,"column_end":108}},{"value":"/ the meantime, as long as the function returns `Some(_)`, but the function will have been applied","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13448,"byte_end":13548,"line_start":279,"line_end":279,"column_start":5,"column_end":105}},{"value":"/ only once to the stored value.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13553,"byte_end":13587,"line_start":280,"line_end":280,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13592,"byte_end":13595,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13600,"byte_end":13614,"line_start":282,"line_end":282,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13619,"byte_end":13622,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13627,"byte_end":13638,"line_start":284,"line_end":284,"column_start":5,"column_end":16}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13643,"byte_end":13687,"line_start":285,"line_end":285,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13692,"byte_end":13695,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13700,"byte_end":13731,"line_start":287,"line_end":287,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(a.fetch_update(|_| None), Err(7));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13736,"byte_end":13785,"line_start":288,"line_end":288,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(7));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13790,"byte_end":13845,"line_start":289,"line_end":289,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.fetch_update(|a| Some(a + 1)), Ok(8));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13850,"byte_end":13905,"line_start":290,"line_end":290,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(), 9);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13910,"byte_end":13938,"line_start":291,"line_end":291,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13943,"byte_end":13950,"line_start":292,"line_end":292,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":13955,"byte_end":13964,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":14525,"byte_end":14529,"line_start":312,"line_end":312,"column_start":8,"column_end":12},"name":"drop","qualname":"<AtomicCell<T> as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30804,"byte_end":30813,"line_start":770,"line_end":770,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<AtomicCell<bool>>::fetch_and","value":"fn fetch_and(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"and\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"and\" to the current value and returns the previous value.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30365,"byte_end":30443,"line_start":754,"line_end":754,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30448,"byte_end":30451,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30456,"byte_end":30470,"line_start":756,"line_end":756,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30475,"byte_end":30478,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30483,"byte_end":30490,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30495,"byte_end":30539,"line_start":759,"line_end":759,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30544,"byte_end":30547,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30552,"byte_end":30586,"line_start":761,"line_end":761,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30591,"byte_end":30594,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(true), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30599,"byte_end":30639,"line_start":763,"line_end":763,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30644,"byte_end":30675,"line_start":764,"line_end":764,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30680,"byte_end":30683,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_and(false), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30688,"byte_end":30729,"line_start":766,"line_end":766,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30734,"byte_end":30766,"line_start":767,"line_end":767,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30771,"byte_end":30778,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30783,"byte_end":30792,"line_start":769,"line_end":769,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31497,"byte_end":31507,"line_start":794,"line_end":794,"column_start":12,"column_end":22},"name":"fetch_nand","qualname":"<AtomicCell<bool>>::fetch_nand","value":"fn fetch_nand(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"nand\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"nand\" to the current value and returns the previous value.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30963,"byte_end":31042,"line_start":775,"line_end":775,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31047,"byte_end":31050,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31055,"byte_end":31069,"line_start":777,"line_end":777,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31074,"byte_end":31077,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31082,"byte_end":31089,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31094,"byte_end":31138,"line_start":780,"line_end":780,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31143,"byte_end":31146,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31151,"byte_end":31185,"line_start":782,"line_end":782,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31190,"byte_end":31193,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_nand(false), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31198,"byte_end":31240,"line_start":784,"line_end":784,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31245,"byte_end":31276,"line_start":785,"line_end":785,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31281,"byte_end":31284,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_nand(true), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31289,"byte_end":31330,"line_start":787,"line_end":787,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31335,"byte_end":31367,"line_start":788,"line_end":788,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31372,"byte_end":31375,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_nand(false), false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31380,"byte_end":31423,"line_start":790,"line_end":790,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31428,"byte_end":31459,"line_start":791,"line_end":791,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31464,"byte_end":31471,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31476,"byte_end":31485,"line_start":793,"line_end":793,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32097,"byte_end":32105,"line_start":815,"line_end":815,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<AtomicCell<bool>>::fetch_or","value":"fn fetch_or(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"or\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"or\" to the current value and returns the previous value.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31658,"byte_end":31735,"line_start":799,"line_end":799,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31740,"byte_end":31743,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31748,"byte_end":31762,"line_start":801,"line_end":801,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31767,"byte_end":31770,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31775,"byte_end":31782,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31787,"byte_end":31831,"line_start":804,"line_end":804,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31836,"byte_end":31839,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31844,"byte_end":31879,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31884,"byte_end":31887,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(false), false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31892,"byte_end":31933,"line_start":808,"line_end":808,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31938,"byte_end":31970,"line_start":809,"line_end":809,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31975,"byte_end":31978,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_or(true), false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":31983,"byte_end":32023,"line_start":811,"line_end":811,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32028,"byte_end":32059,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32064,"byte_end":32071,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32076,"byte_end":32085,"line_start":814,"line_end":814,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32693,"byte_end":32702,"line_start":836,"line_end":836,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<AtomicCell<bool>>::fetch_xor","value":"fn fetch_xor(&Self, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Applies logical \"xor\" to the current value and returns the previous value.","sig":null,"attributes":[{"value":"/ Applies logical \"xor\" to the current value and returns the previous value.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32254,"byte_end":32332,"line_start":820,"line_end":820,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32337,"byte_end":32340,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32345,"byte_end":32359,"line_start":822,"line_end":822,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32364,"byte_end":32367,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32372,"byte_end":32379,"line_start":824,"line_end":824,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::atomic::AtomicCell;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32384,"byte_end":32428,"line_start":825,"line_end":825,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32433,"byte_end":32436,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicCell::new(true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32441,"byte_end":32475,"line_start":827,"line_end":827,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32480,"byte_end":32483,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(false), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32488,"byte_end":32529,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(a.load(), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32534,"byte_end":32565,"line_start":830,"line_end":830,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32570,"byte_end":32573,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(a.fetch_xor(true), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32578,"byte_end":32618,"line_start":832,"line_end":832,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(a.load(), false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32623,"byte_end":32655,"line_start":833,"line_end":833,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32660,"byte_end":32667,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32672,"byte_end":32681,"line_start":835,"line_end":835,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32902,"byte_end":32909,"line_start":843,"line_end":843,"column_start":8,"column_end":15},"name":"default","qualname":"<AtomicCell<T> as std::default::Default>::default","value":"fn default() -> AtomicCell<T>","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":33035,"byte_end":33039,"line_start":850,"line_end":850,"column_start":8,"column_end":12},"name":"from","qualname":"<AtomicCell<T> as std::convert::From>::from","value":"fn from(T) -> AtomicCell<T>","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":33018,"byte_end":33027,"line_start":849,"line_end":849,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":33170,"byte_end":33173,"line_start":856,"line_end":856,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AtomicCell<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":181},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43140,"byte_end":43153,"line_start":7,"line_end":7,"column_start":11,"column_end":24},"name":"AtomicConsume","qualname":"::atomic::consume::AtomicConsume","value":"AtomicConsume","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"decl_id":null,"docs":" Trait which allows reading from primitive atomic types with \"consume\" ordering.\n","sig":null,"attributes":[{"value":"/ Trait which allows reading from primitive atomic types with \"consume\" ordering.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43046,"byte_end":43129,"line_start":6,"line_end":6,"column_start":1,"column_end":84}}]},{"kind":"Type","id":{"krate":0,"index":182},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43206,"byte_end":43209,"line_start":9,"line_end":9,"column_start":10,"column_end":13},"name":"Val","qualname":"::atomic::consume::AtomicConsume::Val","value":"type Val;","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Type returned by `load_consume`.\n","sig":null,"attributes":[{"value":"/ Type returned by `load_consume`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43160,"byte_end":43196,"line_start":8,"line_end":8,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":44047,"byte_end":44059,"line_start":26,"line_end":26,"column_start":8,"column_end":20},"name":"load_consume","qualname":"::atomic::consume::AtomicConsume::load_consume","value":"fn load_consume(&Self) -> Self::Val","parent":{"krate":0,"index":181},"children":[],"decl_id":null,"docs":" Loads a value from the atomic using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a value from the atomic using a \"consume\" memory ordering.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43216,"byte_end":43284,"line_start":11,"line_end":11,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43289,"byte_end":43292,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43297,"byte_end":43370,"line_start":13,"line_end":13,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43375,"byte_end":43451,"line_start":14,"line_end":14,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43456,"byte_end":43527,"line_start":15,"line_end":15,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43532,"byte_end":43606,"line_start":16,"line_end":16,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43611,"byte_end":43634,"line_start":17,"line_end":17,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43639,"byte_end":43642,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43647,"byte_end":43722,"line_start":19,"line_end":19,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43727,"byte_end":43801,"line_start":20,"line_end":20,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43806,"byte_end":43840,"line_start":21,"line_end":21,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43845,"byte_end":43848,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This is currently only implemented on ARM and AArch64, where a fence","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43853,"byte_end":43925,"line_start":23,"line_end":23,"column_start":5,"column_end":77}},{"value":"/ can be avoided. On other architectures this will fall back to a simple","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":43930,"byte_end":44004,"line_start":24,"line_end":24,"column_start":5,"column_end":79}},{"value":"/ `load(Ordering::Acquire)`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":44009,"byte_end":44039,"line_start":25,"line_end":25,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":453},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50618,"byte_end":50629,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"CachePadded","qualname":"::cache_padded::CachePadded","value":"CachePadded {  }","parent":null,"children":[{"krate":0,"index":455}],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":45813,"byte_end":45871,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":45872,"byte_end":45875,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, sometimes it is desirable to make sure commonly accessed pieces of","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":45876,"byte_end":45973,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ data are not placed into the same cache line. Updating an atomic value invalidates the whole","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":45974,"byte_end":46070,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ cache line it belongs to, which makes the next access to the same cache line slower for other","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46071,"byte_end":46168,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ CPU cores. Use `CachePadded` to ensure updating one piece of data doesn't invalidate other","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46169,"byte_end":46263,"line_start":9,"line_end":9,"column_start":1,"column_end":95}},{"value":"/ cached data.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46264,"byte_end":46280,"line_start":10,"line_end":10,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46281,"byte_end":46284,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Size and alignment","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46285,"byte_end":46309,"line_start":12,"line_end":12,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46310,"byte_end":46313,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Cache lines are assumed to be N bytes long, depending on the architecture:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46314,"byte_end":46392,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46393,"byte_end":46396,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * On x86-64, aarch64, and powerpc64, N = 128.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46397,"byte_end":46446,"line_start":16,"line_end":16,"column_start":1,"column_end":50}},{"value":"/ * On arm, mips, mips64, and riscv64, N = 32.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46447,"byte_end":46495,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"/ * On s390x, N = 256.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46496,"byte_end":46520,"line_start":18,"line_end":18,"column_start":1,"column_end":25}},{"value":"/ * On all others, N = 64.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46521,"byte_end":46549,"line_start":19,"line_end":19,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46550,"byte_end":46553,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that N is just a reasonable guess and is not guaranteed to match the actual cache line","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46554,"byte_end":46649,"line_start":21,"line_end":21,"column_start":1,"column_end":96}},{"value":"/ length of the machine the program is running on. On modern Intel architectures, spatial","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46650,"byte_end":46741,"line_start":22,"line_end":22,"column_start":1,"column_end":92}},{"value":"/ prefetcher is pulling pairs of 64-byte cache lines at a time, so we pessimistically assume that","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46742,"byte_end":46841,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ cache lines are 128 bytes long.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46842,"byte_end":46877,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46878,"byte_end":46881,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ The size of `CachePadded<T>` is the smallest multiple of N bytes large enough to accommodate","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46882,"byte_end":46978,"line_start":26,"line_end":26,"column_start":1,"column_end":97}},{"value":"/ a value of type `T`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":46979,"byte_end":47003,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47004,"byte_end":47007,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The alignment of `CachePadded<T>` is the maximum of N bytes and the alignment of `T`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47008,"byte_end":47097,"line_start":29,"line_end":29,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47098,"byte_end":47101,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47102,"byte_end":47116,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47117,"byte_end":47120,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Alignment and padding:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47121,"byte_end":47147,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47148,"byte_end":47151,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47152,"byte_end":47159,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47160,"byte_end":47197,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47198,"byte_end":47201,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let array = [CachePadded::new(1i8), CachePadded::new(2i8)];","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47202,"byte_end":47265,"line_start":38,"line_end":38,"column_start":1,"column_end":64}},{"value":"/ let addr1 = &*array[0] as *const i8 as usize;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47266,"byte_end":47315,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/ let addr2 = &*array[1] as *const i8 as usize;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47316,"byte_end":47365,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47366,"byte_end":47369,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ assert!(addr2 - addr1 >= 32);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47370,"byte_end":47403,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(addr1 % 32, 0);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47404,"byte_end":47434,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(addr2 % 32, 0);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47435,"byte_end":47465,"line_start":44,"line_end":44,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47466,"byte_end":47473,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47474,"byte_end":47477,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ When building a concurrent queue with a head and a tail index, it is wise to place them in","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47478,"byte_end":47572,"line_start":47,"line_end":47,"column_start":1,"column_end":95}},{"value":"/ different cache lines so that concurrent threads pushing and popping elements don't invalidate","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47573,"byte_end":47671,"line_start":48,"line_end":48,"column_start":1,"column_end":99}},{"value":"/ each other's cache lines:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47672,"byte_end":47701,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47702,"byte_end":47705,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47706,"byte_end":47713,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47714,"byte_end":47751,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47752,"byte_end":47791,"line_start":53,"line_end":53,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47792,"byte_end":47795,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ struct Queue<T> {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47796,"byte_end":47817,"line_start":55,"line_end":55,"column_start":1,"column_end":22}},{"value":"/     head: CachePadded<AtomicUsize>,","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47818,"byte_end":47857,"line_start":56,"line_end":56,"column_start":1,"column_end":40}},{"value":"/     tail: CachePadded<AtomicUsize>,","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47858,"byte_end":47897,"line_start":57,"line_end":57,"column_start":1,"column_end":40}},{"value":"/     buffer: *mut T,","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47898,"byte_end":47921,"line_start":58,"line_end":58,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47922,"byte_end":47927,"line_start":59,"line_end":59,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":47928,"byte_end":47935,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"repr(align(128))","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":48889,"byte_end":48905,"line_start":84,"line_end":84,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51011,"byte_end":51014,"line_start":145,"line_end":145,"column_start":18,"column_end":21},"name":"new","qualname":"<CachePadded<T>>::new","value":"const fn new(T) -> CachePadded<T>","parent":null,"children":[],"decl_id":null,"docs":" Pads and aligns a value to the length of a cache line.","sig":null,"attributes":[{"value":"/ Pads and aligns a value to the length of a cache line.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50778,"byte_end":50836,"line_start":136,"line_end":136,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50841,"byte_end":50844,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50849,"byte_end":50863,"line_start":138,"line_end":138,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50868,"byte_end":50871,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50876,"byte_end":50883,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50888,"byte_end":50925,"line_start":141,"line_end":141,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50930,"byte_end":50933,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50938,"byte_end":50981,"line_start":143,"line_end":143,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50986,"byte_end":50993,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51364,"byte_end":51374,"line_start":160,"line_end":160,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<CachePadded<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner value.","sig":null,"attributes":[{"value":"/ Returns the inner value.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51090,"byte_end":51118,"line_start":149,"line_end":149,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51123,"byte_end":51126,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51131,"byte_end":51145,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51150,"byte_end":51153,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51158,"byte_end":51165,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::CachePadded;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51170,"byte_end":51207,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51212,"byte_end":51215,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let padded_value = CachePadded::new(7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51220,"byte_end":51263,"line_start":156,"line_end":156,"column_start":5,"column_end":48}},{"value":"/ let value = padded_value.into_inner();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51268,"byte_end":51310,"line_start":157,"line_end":157,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(value, 7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51315,"byte_end":51340,"line_start":158,"line_end":158,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51345,"byte_end":51352,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51480,"byte_end":51485,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"deref","qualname":"<CachePadded<T> as std::ops::Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51575,"byte_end":51584,"line_start":174,"line_end":174,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<CachePadded<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51700,"byte_end":51703,"line_start":180,"line_end":180,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CachePadded<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51910,"byte_end":51914,"line_start":188,"line_end":188,"column_start":8,"column_end":12},"name":"from","qualname":"<CachePadded<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":242},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54307,"byte_end":54314,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"Backoff","qualname":"::backoff::Backoff","value":"Backoff {  }","parent":null,"children":[{"krate":0,"index":243}],"decl_id":null,"docs":" Performs exponential backoff in spin loops.","sig":null,"attributes":[{"value":"/ Performs exponential backoff in spin loops.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52099,"byte_end":52146,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52147,"byte_end":52150,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Backing off in spin loops reduces contention and improves overall performance.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52151,"byte_end":52233,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52234,"byte_end":52237,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This primitive can execute *YIELD* and *PAUSE* instructions, yield the current thread to the OS","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52238,"byte_end":52337,"line_start":12,"line_end":12,"column_start":1,"column_end":100}},{"value":"/ scheduler, and tell when is a good time to block the thread using a different synchronization","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52338,"byte_end":52435,"line_start":13,"line_end":13,"column_start":1,"column_end":98}},{"value":"/ mechanism. Each step of the back off procedure takes roughly twice as long as the previous","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52436,"byte_end":52530,"line_start":14,"line_end":14,"column_start":1,"column_end":95}},{"value":"/ step.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52531,"byte_end":52540,"line_start":15,"line_end":15,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52541,"byte_end":52544,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52545,"byte_end":52559,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52560,"byte_end":52563,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52564,"byte_end":52600,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52601,"byte_end":52604,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52605,"byte_end":52612,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52613,"byte_end":52646,"line_start":22,"line_end":22,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52647,"byte_end":52686,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52687,"byte_end":52731,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52732,"byte_end":52735,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52736,"byte_end":52790,"line_start":26,"line_end":26,"column_start":1,"column_end":55}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52791,"byte_end":52828,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     loop {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52829,"byte_end":52843,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52844,"byte_end":52881,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52882,"byte_end":52967,"line_start":30,"line_end":30,"column_start":1,"column_end":86}},{"value":"/             return val;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52968,"byte_end":52995,"line_start":31,"line_end":31,"column_start":1,"column_end":28}},{"value":"/         }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":52996,"byte_end":53009,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/         backoff.spin();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53010,"byte_end":53037,"line_start":33,"line_end":33,"column_start":1,"column_end":28}},{"value":"/     }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53038,"byte_end":53047,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53048,"byte_end":53053,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53054,"byte_end":53061,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53062,"byte_end":53065,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53066,"byte_end":53117,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53118,"byte_end":53121,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53122,"byte_end":53129,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53130,"byte_end":53163,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53164,"byte_end":53202,"line_start":42,"line_end":42,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53203,"byte_end":53247,"line_start":43,"line_end":43,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53248,"byte_end":53251,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53252,"byte_end":53290,"line_start":45,"line_end":45,"column_start":1,"column_end":39}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53291,"byte_end":53328,"line_start":46,"line_end":46,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53329,"byte_end":53364,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/         backoff.snooze();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53365,"byte_end":53394,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/     }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53395,"byte_end":53404,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53405,"byte_end":53410,"line_start":50,"line_end":50,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53411,"byte_end":53418,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53419,"byte_end":53422,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53423,"byte_end":53515,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/ Note that whoever sets the atomic variable to `true` must notify the parked thread by calling","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53516,"byte_end":53613,"line_start":54,"line_end":54,"column_start":1,"column_end":98}},{"value":"/ [`unpark()`]:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53614,"byte_end":53631,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53632,"byte_end":53635,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53636,"byte_end":53643,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53644,"byte_end":53677,"line_start":58,"line_end":58,"column_start":1,"column_end":34}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53678,"byte_end":53716,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53717,"byte_end":53761,"line_start":60,"line_end":60,"column_start":1,"column_end":45}},{"value":"/ use std::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53762,"byte_end":53782,"line_start":61,"line_end":61,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53783,"byte_end":53786,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53787,"byte_end":53829,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53830,"byte_end":53867,"line_start":64,"line_end":64,"column_start":1,"column_end":38}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53868,"byte_end":53903,"line_start":65,"line_end":65,"column_start":1,"column_end":36}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53904,"byte_end":53943,"line_start":66,"line_end":66,"column_start":1,"column_end":40}},{"value":"/             thread::park();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53944,"byte_end":53975,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53976,"byte_end":53996,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"/             backoff.snooze();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":53997,"byte_end":54030,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54031,"byte_end":54044,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54045,"byte_end":54054,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54055,"byte_end":54060,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54061,"byte_end":54068,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54069,"byte_end":54072,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54073,"byte_end":54116,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/ [`std::thread::park()`]: std::thread::park","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54117,"byte_end":54163,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/ [`Condvar`]: std::sync::Condvar","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54164,"byte_end":54199,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54200,"byte_end":54249,"line_start":78,"line_end":78,"column_start":1,"column_end":50}},{"value":"/ [`unpark()`]: std::thread::Thread::unpark","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54250,"byte_end":54295,"line_start":79,"line_end":79,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54557,"byte_end":54560,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<Backoff>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Backoff`.","sig":null,"attributes":[{"value":"/ Creates a new `Backoff`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54360,"byte_end":54388,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54393,"byte_end":54396,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54401,"byte_end":54415,"line_start":87,"line_end":87,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54420,"byte_end":54423,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54428,"byte_end":54435,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54440,"byte_end":54473,"line_start":90,"line_end":90,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54478,"byte_end":54481,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54486,"byte_end":54519,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54524,"byte_end":54531,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54536,"byte_end":54545,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54842,"byte_end":54847,"line_start":110,"line_end":110,"column_start":12,"column_end":17},"name":"reset","qualname":"<Backoff>::reset","value":"fn reset(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Resets the `Backoff`.","sig":null,"attributes":[{"value":"/ Resets the `Backoff`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54623,"byte_end":54648,"line_start":99,"line_end":99,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54653,"byte_end":54656,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54661,"byte_end":54675,"line_start":101,"line_end":101,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54680,"byte_end":54683,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54688,"byte_end":54695,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54700,"byte_end":54733,"line_start":104,"line_end":104,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54738,"byte_end":54741,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let backoff = Backoff::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54746,"byte_end":54779,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/ backoff.reset();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54784,"byte_end":54804,"line_start":107,"line_end":107,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54809,"byte_end":54816,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54821,"byte_end":54830,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55891,"byte_end":55895,"line_start":146,"line_end":146,"column_start":12,"column_end":16},"name":"spin","qualname":"<Backoff>::spin","value":"fn spin(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a lock-free loop.","sig":null,"attributes":[{"value":"/ Backs off in a lock-free loop.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54894,"byte_end":54928,"line_start":114,"line_end":114,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54933,"byte_end":54936,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to retry an operation because another thread made","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54941,"byte_end":55034,"line_start":116,"line_end":116,"column_start":5,"column_end":98}},{"value":"/ progress.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55039,"byte_end":55052,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55057,"byte_end":55060,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55065,"byte_end":55134,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55139,"byte_end":55142,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55147,"byte_end":55161,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55166,"byte_end":55169,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Backing off in a lock-free loop:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55174,"byte_end":55210,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55215,"byte_end":55218,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55223,"byte_end":55230,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55235,"byte_end":55268,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/ use std::sync::atomic::AtomicUsize;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55273,"byte_end":55312,"line_start":127,"line_end":127,"column_start":5,"column_end":44}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55317,"byte_end":55361,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55366,"byte_end":55369,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ fn fetch_mul(a: &AtomicUsize, b: usize) -> usize {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55374,"byte_end":55428,"line_start":130,"line_end":130,"column_start":5,"column_end":59}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55433,"byte_end":55470,"line_start":131,"line_end":131,"column_start":5,"column_end":42}},{"value":"/     loop {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55475,"byte_end":55489,"line_start":132,"line_end":132,"column_start":5,"column_end":19}},{"value":"/         let val = a.load(SeqCst);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55494,"byte_end":55531,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/         if a.compare_exchange(val, val.wrapping_mul(b), SeqCst, SeqCst).is_ok() {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55536,"byte_end":55621,"line_start":134,"line_end":134,"column_start":5,"column_end":90}},{"value":"/             return val;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55626,"byte_end":55653,"line_start":135,"line_end":135,"column_start":5,"column_end":32}},{"value":"/         }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55658,"byte_end":55671,"line_start":136,"line_end":136,"column_start":5,"column_end":18}},{"value":"/         backoff.spin();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55676,"byte_end":55703,"line_start":137,"line_end":137,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55708,"byte_end":55717,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55722,"byte_end":55727,"line_start":139,"line_end":139,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55732,"byte_end":55735,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let a = AtomicUsize::new(7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55740,"byte_end":55772,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(fetch_mul(&a, 8), 7);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55777,"byte_end":55813,"line_start":142,"line_end":142,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(a.load(SeqCst), 56);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55818,"byte_end":55853,"line_start":143,"line_end":143,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55858,"byte_end":55865,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":55870,"byte_end":55879,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":58108,"byte_end":58114,"line_start":209,"line_end":209,"column_start":12,"column_end":18},"name":"snooze","qualname":"<Backoff>::snooze","value":"fn snooze(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Backs off in a blocking loop.","sig":null,"attributes":[{"value":"/ Backs off in a blocking loop.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56299,"byte_end":56332,"line_start":159,"line_end":159,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56337,"byte_end":56340,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ This method should be used when we need to wait for another thread to make progress.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56345,"byte_end":56433,"line_start":161,"line_end":161,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56438,"byte_end":56441,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ The processor may yield using the *YIELD* or *PAUSE* instruction and the current thread","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56446,"byte_end":56537,"line_start":163,"line_end":163,"column_start":5,"column_end":96}},{"value":"/ may yield by giving up a timeslice to the OS scheduler.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56542,"byte_end":56601,"line_start":164,"line_end":164,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56606,"byte_end":56609,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ In `#[no_std]` environments, this method is equivalent to [`spin`].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56614,"byte_end":56685,"line_start":166,"line_end":166,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56690,"byte_end":56693,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ If possible, use [`is_completed`] to check when it is advised to stop using backoff and","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56698,"byte_end":56789,"line_start":168,"line_end":168,"column_start":5,"column_end":96}},{"value":"/ block the current thread using a different synchronization mechanism instead.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56794,"byte_end":56875,"line_start":169,"line_end":169,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56880,"byte_end":56883,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`spin`]: Backoff::spin","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56888,"byte_end":56915,"line_start":171,"line_end":171,"column_start":5,"column_end":32}},{"value":"/ [`is_completed`]: Backoff::is_completed","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56920,"byte_end":56963,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56968,"byte_end":56971,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56976,"byte_end":56990,"line_start":174,"line_end":174,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":56995,"byte_end":56998,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true`:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57003,"byte_end":57054,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57059,"byte_end":57062,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57067,"byte_end":57074,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57079,"byte_end":57112,"line_start":179,"line_end":179,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57117,"byte_end":57140,"line_start":180,"line_end":180,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57145,"byte_end":57183,"line_start":181,"line_end":181,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57188,"byte_end":57232,"line_start":182,"line_end":182,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57237,"byte_end":57257,"line_start":183,"line_end":183,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57262,"byte_end":57290,"line_start":184,"line_end":184,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57295,"byte_end":57298,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ fn spin_wait(ready: &AtomicBool) {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57303,"byte_end":57341,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57346,"byte_end":57383,"line_start":187,"line_end":187,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57388,"byte_end":57423,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/         backoff.snooze();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57428,"byte_end":57457,"line_start":189,"line_end":189,"column_start":5,"column_end":34}},{"value":"/     }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57462,"byte_end":57471,"line_start":190,"line_end":190,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57476,"byte_end":57481,"line_start":191,"line_end":191,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57486,"byte_end":57489,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57494,"byte_end":57543,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57548,"byte_end":57579,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57584,"byte_end":57587,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57592,"byte_end":57619,"line_start":196,"line_end":196,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57624,"byte_end":57674,"line_start":197,"line_end":197,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57679,"byte_end":57714,"line_start":198,"line_end":198,"column_start":5,"column_end":40}},{"value":"/ });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57719,"byte_end":57726,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57731,"byte_end":57734,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57739,"byte_end":57781,"line_start":201,"line_end":201,"column_start":5,"column_end":47}},{"value":"/ spin_wait(&ready);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57786,"byte_end":57808,"line_start":202,"line_end":202,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57813,"byte_end":57854,"line_start":203,"line_end":203,"column_start":5,"column_end":46}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":57859,"byte_end":58008,"line_start":204,"line_end":204,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":58013,"byte_end":58020,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":58025,"byte_end":58028,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":58033,"byte_end":58082,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":58087,"byte_end":58096,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60485,"byte_end":60497,"line_start":278,"line_end":278,"column_start":12,"column_end":24},"name":"is_completed","qualname":"<Backoff>::is_completed","value":"fn is_completed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if exponential backoff has completed and blocking the thread is advised.","sig":null,"attributes":[{"value":"/ Returns `true` if exponential backoff has completed and blocking the thread is advised.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59004,"byte_end":59095,"line_start":235,"line_end":235,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59100,"byte_end":59103,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59108,"byte_end":59122,"line_start":237,"line_end":237,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59127,"byte_end":59130,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Waiting for an [`AtomicBool`] to become `true` and parking the thread after a long wait:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59135,"byte_end":59227,"line_start":239,"line_end":239,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59232,"byte_end":59235,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59240,"byte_end":59247,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::Backoff;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59252,"byte_end":59285,"line_start":242,"line_end":242,"column_start":5,"column_end":38}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59290,"byte_end":59313,"line_start":243,"line_end":243,"column_start":5,"column_end":28}},{"value":"/ use std::sync::atomic::AtomicBool;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59318,"byte_end":59356,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59361,"byte_end":59405,"line_start":245,"line_end":245,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59410,"byte_end":59430,"line_start":246,"line_end":246,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59435,"byte_end":59463,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59468,"byte_end":59471,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ fn blocking_wait(ready: &AtomicBool) {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59476,"byte_end":59518,"line_start":249,"line_end":249,"column_start":5,"column_end":47}},{"value":"/     let backoff = Backoff::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59523,"byte_end":59560,"line_start":250,"line_end":250,"column_start":5,"column_end":42}},{"value":"/     while !ready.load(SeqCst) {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59565,"byte_end":59600,"line_start":251,"line_end":251,"column_start":5,"column_end":40}},{"value":"/         if backoff.is_completed() {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59605,"byte_end":59644,"line_start":252,"line_end":252,"column_start":5,"column_end":44}},{"value":"/             thread::park();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59649,"byte_end":59680,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/         } else {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59685,"byte_end":59705,"line_start":254,"line_end":254,"column_start":5,"column_end":25}},{"value":"/             backoff.snooze();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59710,"byte_end":59743,"line_start":255,"line_end":255,"column_start":5,"column_end":38}},{"value":"/         }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59748,"byte_end":59761,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59766,"byte_end":59775,"line_start":257,"line_end":257,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59780,"byte_end":59785,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59790,"byte_end":59793,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let ready = Arc::new(AtomicBool::new(false));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59798,"byte_end":59847,"line_start":260,"line_end":260,"column_start":5,"column_end":54}},{"value":"/ let ready2 = ready.clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59852,"byte_end":59883,"line_start":261,"line_end":261,"column_start":5,"column_end":36}},{"value":"/ let waiter = thread::current();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59888,"byte_end":59923,"line_start":262,"line_end":262,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59928,"byte_end":59931,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59936,"byte_end":59963,"line_start":264,"line_end":264,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(100));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":59968,"byte_end":60018,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/     ready2.store(true, SeqCst);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60023,"byte_end":60058,"line_start":266,"line_end":266,"column_start":5,"column_end":40}},{"value":"/     waiter.unpark();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60063,"byte_end":60087,"line_start":267,"line_end":267,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60092,"byte_end":60099,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60104,"byte_end":60107,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ready.load(SeqCst), false);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60112,"byte_end":60154,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ blocking_wait(&ready);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60159,"byte_end":60185,"line_start":271,"line_end":271,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(ready.load(SeqCst), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60190,"byte_end":60231,"line_start":272,"line_end":272,"column_start":5,"column_end":46}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60236,"byte_end":60385,"line_start":273,"line_end":273,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60390,"byte_end":60397,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60402,"byte_end":60405,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ [`AtomicBool`]: std::sync::atomic::AtomicBool","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60410,"byte_end":60459,"line_start":276,"line_end":276,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60464,"byte_end":60473,"line_start":277,"line_end":277,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60599,"byte_end":60602,"line_start":284,"line_end":284,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Backoff as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60850,"byte_end":60857,"line_start":293,"line_end":293,"column_start":8,"column_end":15},"name":"default","qualname":"<Backoff as std::default::Default>::default","value":"fn default() -> Backoff","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":479},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":519},{"krate":0,"index":587},{"krate":0,"index":753},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800}],"decl_id":null,"docs":" Thread synchronization primitives.","sig":null,"attributes":[{"value":"/ Thread synchronization primitives.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14220495,"byte_end":14220533,"line_start":1,"line_end":1,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14220534,"byte_end":14220537,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ * [`Parker`], a thread parking primitive.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14220538,"byte_end":14220583,"line_start":3,"line_end":3,"column_start":1,"column_end":46}},{"value":"/ * [`ShardedLock`], a sharded reader-writer lock with fast concurrent reads.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14220584,"byte_end":14220663,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ * [`WaitGroup`], for synchronizing the beginning or end of some computation.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/mod.rs","byte_start":14220664,"byte_end":14220744,"line_start":5,"line_end":5,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":549},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225914,"byte_end":14225920,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"Parker","qualname":"::sync::parker::Parker","value":"Parker {  }","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" A thread parking primitive.","sig":null,"attributes":[{"value":"/ A thread parking primitive.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224334,"byte_end":14224365,"line_start":8,"line_end":8,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224366,"byte_end":14224369,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Conceptually, each `Parker` has an associated token which is initially not present:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224370,"byte_end":14224457,"line_start":10,"line_end":10,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224458,"byte_end":14224461,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * The [`park`] method blocks the current thread unless or until the token is available, at","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224462,"byte_end":14224556,"line_start":12,"line_end":12,"column_start":1,"column_end":95}},{"value":"/   which point it automatically consumes the token.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224557,"byte_end":14224611,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224612,"byte_end":14224615,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ * The [`park_timeout`] and [`park_deadline`] methods work the same as [`park`], but block for","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224616,"byte_end":14224713,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/   a specified maximum time.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224714,"byte_end":14224745,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224746,"byte_end":14224749,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ * The [`unpark`] method atomically makes the token available if it wasn't already. Because the","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224750,"byte_end":14224848,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/   token is initially absent, [`unpark`] followed by [`park`] will result in the second call","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224849,"byte_end":14224944,"line_start":19,"line_end":19,"column_start":1,"column_end":96}},{"value":"/   returning immediately.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224945,"byte_end":14224973,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224974,"byte_end":14224977,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In other words, each `Parker` acts a bit like a spinlock that can be locked and unlocked using","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14224978,"byte_end":14225076,"line_start":22,"line_end":22,"column_start":1,"column_end":99}},{"value":"/ [`park`] and [`unpark`].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225077,"byte_end":14225105,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225106,"byte_end":14225109,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225110,"byte_end":14225124,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225125,"byte_end":14225128,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225129,"byte_end":14225136,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ use std::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225137,"byte_end":14225157,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225158,"byte_end":14225186,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225187,"byte_end":14225225,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225226,"byte_end":14225229,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225230,"byte_end":14225256,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225257,"byte_end":14225290,"line_start":33,"line_end":33,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225291,"byte_end":14225294,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ // Make the token available.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225295,"byte_end":14225327,"line_start":35,"line_end":35,"column_start":1,"column_end":33}},{"value":"/ u.unpark();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225328,"byte_end":14225343,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225344,"byte_end":14225395,"line_start":37,"line_end":37,"column_start":1,"column_end":52}},{"value":"/ p.park();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225396,"byte_end":14225409,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225410,"byte_end":14225413,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225414,"byte_end":14225441,"line_start":40,"line_end":40,"column_start":1,"column_end":28}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225442,"byte_end":14225492,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/     u.unpark();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225493,"byte_end":14225512,"line_start":42,"line_end":42,"column_start":1,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225513,"byte_end":14225520,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225521,"byte_end":14225524,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225525,"byte_end":14225578,"line_start":45,"line_end":45,"column_start":1,"column_end":54}},{"value":"/ p.park();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225579,"byte_end":14225592,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225593,"byte_end":14225742,"line_start":47,"line_end":47,"column_start":1,"column_end":150}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225743,"byte_end":14225750,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225751,"byte_end":14225754,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225755,"byte_end":14225781,"line_start":50,"line_end":50,"column_start":1,"column_end":27}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225782,"byte_end":14225824,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/ [`park_deadline`]: Parker::park_deadline","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225825,"byte_end":14225869,"line_start":52,"line_end":52,"column_start":1,"column_end":45}},{"value":"/ [`unpark`]: Unparker::unpark","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14225870,"byte_end":14225902,"line_start":53,"line_end":53,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226052,"byte_end":14226059,"line_start":62,"line_end":62,"column_start":8,"column_end":15},"name":"default","qualname":"<Parker as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226590,"byte_end":14226593,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<Parker>::new","value":"fn new() -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Parker`.","sig":null,"attributes":[{"value":"/ Creates a new `Parker`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226402,"byte_end":14226429,"line_start":77,"line_end":77,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226434,"byte_end":14226437,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226442,"byte_end":14226456,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226461,"byte_end":14226464,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226469,"byte_end":14226476,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226481,"byte_end":14226519,"line_start":82,"line_end":82,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226524,"byte_end":14226527,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226532,"byte_end":14226558,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226563,"byte_end":14226570,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226575,"byte_end":14226578,"line_start":86,"line_end":86,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227045,"byte_end":14227049,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"park","qualname":"<Parker>::park","value":"fn park(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226643,"byte_end":14226707,"line_start":91,"line_end":91,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226712,"byte_end":14226715,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226720,"byte_end":14226734,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226739,"byte_end":14226742,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226747,"byte_end":14226754,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226759,"byte_end":14226797,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226802,"byte_end":14226805,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226810,"byte_end":14226836,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226841,"byte_end":14226874,"line_start":99,"line_end":99,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226879,"byte_end":14226882,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226887,"byte_end":14226919,"line_start":101,"line_end":101,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226924,"byte_end":14226939,"line_start":102,"line_end":102,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226944,"byte_end":14226947,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226952,"byte_end":14227003,"line_start":104,"line_end":104,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227008,"byte_end":14227021,"line_start":105,"line_end":105,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227026,"byte_end":14227033,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227539,"byte_end":14227551,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"park_timeout","qualname":"<Parker>::park_timeout","value":"fn park_timeout(&Self, Duration)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, but only for a limited time.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, but only for a limited time.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227110,"byte_end":14227203,"line_start":111,"line_end":111,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227208,"byte_end":14227211,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227216,"byte_end":14227230,"line_start":113,"line_end":113,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227235,"byte_end":14227238,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227243,"byte_end":14227250,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227255,"byte_end":14227283,"line_start":116,"line_end":116,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227288,"byte_end":14227326,"line_start":117,"line_end":117,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227331,"byte_end":14227334,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227339,"byte_end":14227365,"line_start":119,"line_end":119,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227370,"byte_end":14227373,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227378,"byte_end":14227463,"line_start":121,"line_end":121,"column_start":5,"column_end":90}},{"value":"/ p.park_timeout(Duration::from_millis(500));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227468,"byte_end":14227515,"line_start":122,"line_end":122,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227520,"byte_end":14227527,"line_start":123,"line_end":123,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228135,"byte_end":14228148,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"park_deadline","qualname":"<Parker>::park_deadline","value":"fn park_deadline(&Self, Instant)","parent":null,"children":[],"decl_id":null,"docs":" Blocks the current thread until the token is made available, or until a certain deadline.","sig":null,"attributes":[{"value":"/ Blocks the current thread until the token is made available, or until a certain deadline.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227644,"byte_end":14227737,"line_start":128,"line_end":128,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227742,"byte_end":14227745,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227750,"byte_end":14227764,"line_start":130,"line_end":130,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227769,"byte_end":14227772,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227777,"byte_end":14227784,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use std::time::{Duration, Instant};","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227789,"byte_end":14227828,"line_start":133,"line_end":133,"column_start":5,"column_end":44}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227833,"byte_end":14227871,"line_start":134,"line_end":134,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227876,"byte_end":14227879,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227884,"byte_end":14227910,"line_start":136,"line_end":136,"column_start":5,"column_end":31}},{"value":"/ let deadline = Instant::now() + Duration::from_millis(500);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227915,"byte_end":14227978,"line_start":137,"line_end":137,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227983,"byte_end":14227986,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ // Waits for the token to become available, but will not wait longer than 500 ms.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14227991,"byte_end":14228076,"line_start":139,"line_end":139,"column_start":5,"column_end":90}},{"value":"/ p.park_deadline(deadline);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228081,"byte_end":14228111,"line_start":140,"line_end":140,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228116,"byte_end":14228123,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228811,"byte_end":14228819,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"unparker","qualname":"<Parker>::unparker","value":"fn unparker(&Self) -> &Unparker","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to an associated [`Unparker`].","sig":null,"attributes":[{"value":"/ Returns a reference to an associated [`Unparker`].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228237,"byte_end":14228291,"line_start":146,"line_end":146,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228296,"byte_end":14228299,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The returned [`Unparker`] doesn't have to be used by reference - it can also be cloned.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228304,"byte_end":14228395,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228400,"byte_end":14228403,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228408,"byte_end":14228422,"line_start":150,"line_end":150,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228427,"byte_end":14228430,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228435,"byte_end":14228442,"line_start":152,"line_end":152,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228447,"byte_end":14228485,"line_start":153,"line_end":153,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228490,"byte_end":14228493,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228498,"byte_end":14228524,"line_start":155,"line_end":155,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228529,"byte_end":14228562,"line_start":156,"line_end":156,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228567,"byte_end":14228570,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ // Make the token available.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228575,"byte_end":14228607,"line_start":158,"line_end":158,"column_start":5,"column_end":37}},{"value":"/ u.unpark();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228612,"byte_end":14228627,"line_start":159,"line_end":159,"column_start":5,"column_end":20}},{"value":"/ // Wakes up immediately and consumes the token.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228632,"byte_end":14228683,"line_start":160,"line_end":160,"column_start":5,"column_end":56}},{"value":"/ p.park();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228688,"byte_end":14228701,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228706,"byte_end":14228713,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228718,"byte_end":14228721,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228726,"byte_end":14228752,"line_start":164,"line_end":164,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228757,"byte_end":14228799,"line_start":165,"line_end":165,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":561},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229163,"byte_end":14229171,"line_start":181,"line_end":181,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Parker>::into_raw","value":"fn into_raw(Parker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts a `Parker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts a `Parker` into a raw pointer.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228876,"byte_end":14228919,"line_start":170,"line_end":170,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228924,"byte_end":14228927,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228932,"byte_end":14228946,"line_start":172,"line_end":172,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228951,"byte_end":14228954,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228959,"byte_end":14228966,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14228971,"byte_end":14229009,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229014,"byte_end":14229017,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229022,"byte_end":14229048,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229053,"byte_end":14229087,"line_start":178,"line_end":178,"column_start":5,"column_end":39}},{"value":"/ # let _ = unsafe { Parker::from_raw(raw) };","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229092,"byte_end":14229139,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229144,"byte_end":14229151,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229667,"byte_end":14229675,"line_start":200,"line_end":200,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Parker>::from_raw","value":"unsafe fn from_raw(*const ()) -> Parker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into a `Parker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into a `Parker`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229254,"byte_end":14229297,"line_start":185,"line_end":185,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229302,"byte_end":14229305,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229310,"byte_end":14229322,"line_start":187,"line_end":187,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229327,"byte_end":14229330,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Parker::into_raw`].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229335,"byte_end":14229418,"line_start":189,"line_end":189,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229423,"byte_end":14229426,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229431,"byte_end":14229445,"line_start":191,"line_end":191,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229450,"byte_end":14229453,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229458,"byte_end":14229465,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229470,"byte_end":14229508,"line_start":194,"line_end":194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229513,"byte_end":14229516,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229521,"byte_end":14229547,"line_start":196,"line_end":196,"column_start":5,"column_end":31}},{"value":"/ let raw = Parker::into_raw(p);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229552,"byte_end":14229586,"line_start":197,"line_end":197,"column_start":5,"column_end":39}},{"value":"/ let p = unsafe { Parker::from_raw(raw) };","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229591,"byte_end":14229636,"line_start":198,"line_end":198,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229641,"byte_end":14229648,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229857,"byte_end":14229860,"line_start":209,"line_end":209,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Parker as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":565},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230022,"byte_end":14230030,"line_start":215,"line_end":215,"column_start":12,"column_end":20},"name":"Unparker","qualname":"::sync::parker::Unparker","value":"Unparker {  }","parent":null,"children":[{"krate":0,"index":566}],"decl_id":null,"docs":" Unparks a thread parked by the associated [`Parker`].\n","sig":null,"attributes":[{"value":"/ Unparks a thread parked by the associated [`Parker`].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229953,"byte_end":14230010,"line_start":214,"line_end":214,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231030,"byte_end":14231036,"line_start":250,"line_end":250,"column_start":12,"column_end":18},"name":"unpark","qualname":"<Unparker>::unpark","value":"fn unpark(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Atomically makes the token available if it is not already.","sig":null,"attributes":[{"value":"/ Atomically makes the token available if it is not already.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230146,"byte_end":14230208,"line_start":223,"line_end":223,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230213,"byte_end":14230216,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This method will wake up the thread blocked on [`park`] or [`park_timeout`], if there is","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230221,"byte_end":14230313,"line_start":225,"line_end":225,"column_start":5,"column_end":97}},{"value":"/ any.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230318,"byte_end":14230326,"line_start":226,"line_end":226,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230331,"byte_end":14230334,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230339,"byte_end":14230353,"line_start":228,"line_end":228,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230358,"byte_end":14230361,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230366,"byte_end":14230373,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use std::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230378,"byte_end":14230398,"line_start":231,"line_end":231,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230403,"byte_end":14230431,"line_start":232,"line_end":232,"column_start":5,"column_end":33}},{"value":"/ use crossbeam_utils::sync::Parker;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230436,"byte_end":14230474,"line_start":233,"line_end":233,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230479,"byte_end":14230482,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230487,"byte_end":14230513,"line_start":235,"line_end":235,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230518,"byte_end":14230551,"line_start":236,"line_end":236,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230556,"byte_end":14230559,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230564,"byte_end":14230591,"line_start":238,"line_end":238,"column_start":5,"column_end":32}},{"value":"/     thread::sleep(Duration::from_millis(500));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230596,"byte_end":14230646,"line_start":239,"line_end":239,"column_start":5,"column_end":55}},{"value":"/     u.unpark();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230651,"byte_end":14230670,"line_start":240,"line_end":240,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230675,"byte_end":14230682,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230687,"byte_end":14230690,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ // Wakes up when `u.unpark()` provides the token.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230695,"byte_end":14230748,"line_start":243,"line_end":243,"column_start":5,"column_end":58}},{"value":"/ p.park();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230753,"byte_end":14230766,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230771,"byte_end":14230920,"line_start":245,"line_end":245,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230925,"byte_end":14230932,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230937,"byte_end":14230940,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ [`park`]: Parker::park","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230945,"byte_end":14230971,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/ [`park_timeout`]: Parker::park_timeout","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230976,"byte_end":14231018,"line_start":249,"line_end":249,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231429,"byte_end":14231437,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Unparker>::into_raw","value":"fn into_raw(Unparker) -> *const ()","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Unparker` into a raw pointer.","sig":null,"attributes":[{"value":"/ Converts an `Unparker` into a raw pointer.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231085,"byte_end":14231131,"line_start":254,"line_end":254,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231136,"byte_end":14231139,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231144,"byte_end":14231158,"line_start":256,"line_end":256,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231163,"byte_end":14231166,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231171,"byte_end":14231178,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231183,"byte_end":14231233,"line_start":259,"line_end":259,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231238,"byte_end":14231241,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231246,"byte_end":14231272,"line_start":261,"line_end":261,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231277,"byte_end":14231310,"line_start":262,"line_end":262,"column_start":5,"column_end":38}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231315,"byte_end":14231351,"line_start":263,"line_end":263,"column_start":5,"column_end":41}},{"value":"/ # let _ = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231356,"byte_end":14231405,"line_start":264,"line_end":264,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231410,"byte_end":14231417,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14232007,"byte_end":14232015,"line_start":287,"line_end":287,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Unparker>::from_raw","value":"unsafe fn from_raw(*const ()) -> Unparker","parent":null,"children":[],"decl_id":null,"docs":" Converts a raw pointer into an `Unparker`.","sig":null,"attributes":[{"value":"/ Converts a raw pointer into an `Unparker`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231527,"byte_end":14231573,"line_start":270,"line_end":270,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231578,"byte_end":14231581,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231586,"byte_end":14231598,"line_start":272,"line_end":272,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231603,"byte_end":14231606,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ This method is safe to use only with pointers returned by [`Unparker::into_raw`].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231611,"byte_end":14231696,"line_start":274,"line_end":274,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231701,"byte_end":14231704,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231709,"byte_end":14231723,"line_start":276,"line_end":276,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231728,"byte_end":14231731,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231736,"byte_end":14231743,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::{Parker, Unparker};","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231748,"byte_end":14231798,"line_start":279,"line_end":279,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231803,"byte_end":14231806,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let p = Parker::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231811,"byte_end":14231837,"line_start":281,"line_end":281,"column_start":5,"column_end":31}},{"value":"/ let u = p.unparker().clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231842,"byte_end":14231875,"line_start":282,"line_end":282,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231880,"byte_end":14231883,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ let raw = Unparker::into_raw(u);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231888,"byte_end":14231924,"line_start":284,"line_end":284,"column_start":5,"column_end":41}},{"value":"/ let u = unsafe { Unparker::from_raw(raw) };","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231929,"byte_end":14231976,"line_start":285,"line_end":285,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14231981,"byte_end":14231988,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14232177,"byte_end":14232180,"line_start":295,"line_end":295,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Unparker as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14232308,"byte_end":14232313,"line_start":301,"line_end":301,"column_start":8,"column_end":13},"name":"clone","qualname":"<Unparker as std::clone::Clone>::clone","value":"fn clone(&Self) -> Unparker","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":660},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239737,"byte_end":14239748,"line_start":76,"line_end":76,"column_start":12,"column_end":23},"name":"ShardedLock","qualname":"::sync::sharded_lock::ShardedLock","value":"ShardedLock {  }","parent":null,"children":[{"krate":0,"index":662},{"krate":0,"index":663}],"decl_id":null,"docs":" A sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ A sharded reader-writer lock.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14237986,"byte_end":14238019,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238020,"byte_end":14238023,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This lock is equivalent to [`RwLock`], except read operations are faster and write operations","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238024,"byte_end":14238121,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ are slower.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238122,"byte_end":14238137,"line_start":33,"line_end":33,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238138,"byte_end":14238141,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock` is internally made of a list of *shards*, each being a [`RwLock`] occupying a","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238142,"byte_end":14238239,"line_start":35,"line_end":35,"column_start":1,"column_end":98}},{"value":"/ single cache line. Read operations will pick one of the shards depending on the current thread","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238240,"byte_end":14238338,"line_start":36,"line_end":36,"column_start":1,"column_end":99}},{"value":"/ and lock it. Write operations need to lock all shards in succession.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238339,"byte_end":14238411,"line_start":37,"line_end":37,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238412,"byte_end":14238415,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ By splitting the lock into shards, concurrent read operations will in most cases choose","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238416,"byte_end":14238507,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ different shards and thus update different cache lines, which is good for scalability. However,","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238508,"byte_end":14238607,"line_start":40,"line_end":40,"column_start":1,"column_end":100}},{"value":"/ write operations need to do more work and are therefore slower than usual.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238608,"byte_end":14238686,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238687,"byte_end":14238690,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The priority policy of the lock is dependent on the underlying operating system's","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238691,"byte_end":14238776,"line_start":43,"line_end":43,"column_start":1,"column_end":86}},{"value":"/ implementation, and this type does not guarantee that any particular policy will be used.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238777,"byte_end":14238870,"line_start":44,"line_end":44,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238871,"byte_end":14238874,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Poisoning","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238875,"byte_end":14238890,"line_start":46,"line_end":46,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238891,"byte_end":14238894,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ A `ShardedLock`, like [`RwLock`], will become poisoned on a panic. Note that it may only be","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238895,"byte_end":14238990,"line_start":48,"line_end":48,"column_start":1,"column_end":96}},{"value":"/ poisoned if a panic occurs while a write operation is in progress. If a panic occurs in any","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14238991,"byte_end":14239086,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ read operation, the lock will not be poisoned.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239087,"byte_end":14239137,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239138,"byte_end":14239141,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239142,"byte_end":14239156,"line_start":52,"line_end":52,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239157,"byte_end":14239160,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239161,"byte_end":14239168,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239169,"byte_end":14239212,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239213,"byte_end":14239216,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239217,"byte_end":14239252,"line_start":57,"line_end":57,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239253,"byte_end":14239256,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // Any number of read locks can be held at once.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239257,"byte_end":14239309,"line_start":59,"line_end":59,"column_start":1,"column_end":53}},{"value":"/ {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239310,"byte_end":14239315,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/     let r1 = lock.read().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239316,"byte_end":14239354,"line_start":61,"line_end":61,"column_start":1,"column_end":39}},{"value":"/     let r2 = lock.read().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239355,"byte_end":14239393,"line_start":62,"line_end":62,"column_start":1,"column_end":39}},{"value":"/     assert_eq!(*r1, 5);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239394,"byte_end":14239421,"line_start":63,"line_end":63,"column_start":1,"column_end":28}},{"value":"/     assert_eq!(*r2, 5);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239422,"byte_end":14239449,"line_start":64,"line_end":64,"column_start":1,"column_end":28}},{"value":"/ } // Read locks are dropped at this point.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239450,"byte_end":14239496,"line_start":65,"line_end":65,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239497,"byte_end":14239500,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ // However, only one write lock may be held.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239501,"byte_end":14239549,"line_start":67,"line_end":67,"column_start":1,"column_end":49}},{"value":"/ {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239550,"byte_end":14239555,"line_start":68,"line_end":68,"column_start":1,"column_end":6}},{"value":"/     let mut w = lock.write().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239556,"byte_end":14239598,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/     *w += 1;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239599,"byte_end":14239615,"line_start":70,"line_end":70,"column_start":1,"column_end":17}},{"value":"/     assert_eq!(*w, 6);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239616,"byte_end":14239642,"line_start":71,"line_end":71,"column_start":1,"column_end":27}},{"value":"/ } // Write lock is dropped here.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239643,"byte_end":14239679,"line_start":72,"line_end":72,"column_start":1,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239680,"byte_end":14239687,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239688,"byte_end":14239691,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [`RwLock`]: std::sync::RwLock","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239692,"byte_end":14239725,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240377,"byte_end":14240380,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<ShardedLock<T>>::new","value":"fn new(T) -> ShardedLock<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sharded reader-writer lock.","sig":null,"attributes":[{"value":"/ Creates a new sharded reader-writer lock.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240165,"byte_end":14240210,"line_start":91,"line_end":91,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240215,"byte_end":14240218,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240223,"byte_end":14240237,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240242,"byte_end":14240245,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240250,"byte_end":14240257,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240262,"byte_end":14240305,"line_start":96,"line_end":96,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240310,"byte_end":14240313,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(5);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240318,"byte_end":14240353,"line_start":98,"line_end":98,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240358,"byte_end":14240365,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241353,"byte_end":14241363,"line_start":133,"line_end":133,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ShardedLock<T>>::into_inner","value":"fn into_inner(Self) -> LockResult<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this lock, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this lock, returning the underlying data.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240794,"byte_end":14240848,"line_start":114,"line_end":114,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240853,"byte_end":14240856,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240861,"byte_end":14240873,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240878,"byte_end":14240881,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240886,"byte_end":14240981,"line_start":118,"line_end":118,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240986,"byte_end":14241007,"line_start":119,"line_end":119,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241012,"byte_end":14241015,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241020,"byte_end":14241034,"line_start":121,"line_end":121,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241039,"byte_end":14241042,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241047,"byte_end":14241054,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241059,"byte_end":14241102,"line_start":124,"line_end":124,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241107,"byte_end":14241110,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(String::new());","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241115,"byte_end":14241162,"line_start":126,"line_end":126,"column_start":5,"column_end":52}},{"value":"/ {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241167,"byte_end":14241172,"line_start":127,"line_end":127,"column_start":5,"column_end":10}},{"value":"/     let mut s = lock.write().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241177,"byte_end":14241219,"line_start":128,"line_end":128,"column_start":5,"column_end":47}},{"value":"/     *s = \"modified\".to_owned();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241224,"byte_end":14241259,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241264,"byte_end":14241269,"line_start":130,"line_end":130,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(lock.into_inner().unwrap(), \"modified\");","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241274,"byte_end":14241329,"line_start":131,"line_end":131,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241334,"byte_end":14241341,"line_start":132,"line_end":132,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242340,"byte_end":14242351,"line_start":167,"line_end":167,"column_start":12,"column_end":23},"name":"is_poisoned","qualname":"<ShardedLock<T>>::is_poisoned","value":"fn is_poisoned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is poisoned.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is poisoned.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241642,"byte_end":14241685,"line_start":146,"line_end":146,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241690,"byte_end":14241693,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ If another thread can still access the lock, it may become poisoned at any time. A `false`","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241698,"byte_end":14241792,"line_start":148,"line_end":148,"column_start":5,"column_end":99}},{"value":"/ result should not be trusted without additional synchronization.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241797,"byte_end":14241865,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241870,"byte_end":14241873,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241878,"byte_end":14241892,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241897,"byte_end":14241900,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241905,"byte_end":14241912,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241917,"byte_end":14241960,"line_start":154,"line_end":154,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241965,"byte_end":14241988,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241993,"byte_end":14242013,"line_start":156,"line_end":156,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242018,"byte_end":14242021,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(0));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242026,"byte_end":14242071,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242076,"byte_end":14242106,"line_start":159,"line_end":159,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242111,"byte_end":14242114,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let _ = thread::spawn(move || {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242119,"byte_end":14242154,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/     let _lock = c_lock.write().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242159,"byte_end":14242203,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/     panic!(); // the lock gets poisoned","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242208,"byte_end":14242251,"line_start":163,"line_end":163,"column_start":5,"column_end":48}},{"value":"/ }).join();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242256,"byte_end":14242270,"line_start":164,"line_end":164,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(lock.is_poisoned(), true);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242275,"byte_end":14242316,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242321,"byte_end":14242328,"line_start":166,"line_end":166,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242990,"byte_end":14242997,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<ShardedLock<T>>::get_mut","value":"fn get_mut(&mut Self) -> LockResult<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242422,"byte_end":14242477,"line_start":171,"line_end":171,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242482,"byte_end":14242485,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the lock mutably, no actual locking needs to take place.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242490,"byte_end":14242574,"line_start":173,"line_end":173,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242579,"byte_end":14242582,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242587,"byte_end":14242599,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242604,"byte_end":14242607,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242612,"byte_end":14242707,"line_start":177,"line_end":177,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242712,"byte_end":14242733,"line_start":178,"line_end":178,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242738,"byte_end":14242741,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242746,"byte_end":14242760,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242765,"byte_end":14242768,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242773,"byte_end":14242780,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242785,"byte_end":14242828,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242833,"byte_end":14242836,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let mut lock = ShardedLock::new(0);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242841,"byte_end":14242880,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/ *lock.get_mut().unwrap() = 10;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242885,"byte_end":14242919,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(*lock.read().unwrap(), 10);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242924,"byte_end":14242966,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14242971,"byte_end":14242978,"line_start":188,"line_end":188,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14244117,"byte_end":14244125,"line_start":224,"line_end":224,"column_start":12,"column_end":20},"name":"try_read","qualname":"<ShardedLock<T>>::try_read","value":"fn try_read(&Self) -> TryLockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with shared read access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with shared read access.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243261,"byte_end":14243319,"line_start":200,"line_end":200,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243324,"byte_end":14243327,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243332,"byte_end":14243425,"line_start":202,"line_end":202,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the shared access when it is dropped. This method does not","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243430,"byte_end":14243523,"line_start":203,"line_end":203,"column_start":5,"column_end":98}},{"value":"/ provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243528,"byte_end":14243617,"line_start":204,"line_end":204,"column_start":5,"column_end":94}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243622,"byte_end":14243662,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243667,"byte_end":14243670,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243675,"byte_end":14243687,"line_start":207,"line_end":207,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243692,"byte_end":14243695,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243700,"byte_end":14243795,"line_start":209,"line_end":209,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243800,"byte_end":14243821,"line_start":210,"line_end":210,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243826,"byte_end":14243829,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243834,"byte_end":14243848,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243853,"byte_end":14243856,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243861,"byte_end":14243868,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243873,"byte_end":14243916,"line_start":215,"line_end":215,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243921,"byte_end":14243924,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243929,"byte_end":14243964,"line_start":217,"line_end":217,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243969,"byte_end":14243972,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ match lock.try_read() {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14243977,"byte_end":14244004,"line_start":219,"line_end":219,"column_start":5,"column_end":32}},{"value":"/     Ok(n) => assert_eq!(*n, 1),","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14244009,"byte_end":14244044,"line_start":220,"line_end":220,"column_start":5,"column_end":40}},{"value":"/     Err(_) => unreachable!(),","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14244049,"byte_end":14244082,"line_start":221,"line_end":221,"column_start":5,"column_end":38}},{"value":"/ };","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14244087,"byte_end":14244093,"line_start":222,"line_end":222,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14244098,"byte_end":14244105,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246426,"byte_end":14246430,"line_start":284,"line_end":284,"column_start":12,"column_end":16},"name":"read","qualname":"<ShardedLock<T>>::read","value":"fn read(&Self) -> LockResult<ShardedLockReadGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with shared read access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with shared read access, blocking the current thread until it can be acquired.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245144,"byte_end":14245232,"line_start":248,"line_end":248,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245237,"byte_end":14245240,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245245,"byte_end":14245336,"line_start":250,"line_end":250,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245341,"byte_end":14245435,"line_start":251,"line_end":251,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245440,"byte_end":14245535,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245540,"byte_end":14245583,"line_start":253,"line_end":253,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245588,"byte_end":14245591,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the shared access when dropped.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245596,"byte_end":14245666,"line_start":255,"line_end":255,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245671,"byte_end":14245674,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245679,"byte_end":14245691,"line_start":257,"line_end":257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245696,"byte_end":14245699,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245704,"byte_end":14245799,"line_start":259,"line_end":259,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245804,"byte_end":14245825,"line_start":260,"line_end":260,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245830,"byte_end":14245833,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245838,"byte_end":14245850,"line_start":262,"line_end":262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245855,"byte_end":14245858,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245863,"byte_end":14245953,"line_start":264,"line_end":264,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245958,"byte_end":14245961,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245966,"byte_end":14245980,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245985,"byte_end":14245988,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14245993,"byte_end":14246000,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246005,"byte_end":14246048,"line_start":269,"line_end":269,"column_start":5,"column_end":48}},{"value":"/ use std::sync::Arc;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246053,"byte_end":14246076,"line_start":270,"line_end":270,"column_start":5,"column_end":28}},{"value":"/ use std::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246081,"byte_end":14246101,"line_start":271,"line_end":271,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246106,"byte_end":14246109,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ let lock = Arc::new(ShardedLock::new(1));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246114,"byte_end":14246159,"line_start":273,"line_end":273,"column_start":5,"column_end":50}},{"value":"/ let c_lock = lock.clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246164,"byte_end":14246194,"line_start":274,"line_end":274,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246199,"byte_end":14246202,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246207,"byte_end":14246240,"line_start":276,"line_end":276,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246245,"byte_end":14246267,"line_start":277,"line_end":277,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246272,"byte_end":14246275,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246280,"byte_end":14246307,"line_start":279,"line_end":279,"column_start":5,"column_end":32}},{"value":"/     let r = c_lock.read();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246312,"byte_end":14246342,"line_start":280,"line_end":280,"column_start":5,"column_end":35}},{"value":"/     assert!(r.is_ok());","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246347,"byte_end":14246374,"line_start":281,"line_end":281,"column_start":5,"column_end":32}},{"value":"/ }).join().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246379,"byte_end":14246402,"line_start":282,"line_end":282,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14246407,"byte_end":14246414,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14248095,"byte_end":14248104,"line_start":328,"line_end":328,"column_start":12,"column_end":21},"name":"try_write","qualname":"<ShardedLock<T>>::try_write","value":"fn try_write(&Self) -> TryLockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to acquire this lock with exclusive write access.","sig":null,"attributes":[{"value":"/ Attempts to acquire this lock with exclusive write access.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247236,"byte_end":14247298,"line_start":304,"line_end":304,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247303,"byte_end":14247306,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ If the access could not be granted at this time, an error is returned. Otherwise, a guard","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247311,"byte_end":14247404,"line_start":306,"line_end":306,"column_start":5,"column_end":98}},{"value":"/ is returned which will release the exclusive access when it is dropped. This method does","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247409,"byte_end":14247501,"line_start":307,"line_end":307,"column_start":5,"column_end":97}},{"value":"/ not provide any guarantees with respect to the ordering of whether contentious readers or","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247506,"byte_end":14247599,"line_start":308,"line_end":308,"column_start":5,"column_end":98}},{"value":"/ writers will acquire the lock first.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247604,"byte_end":14247644,"line_start":309,"line_end":309,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247649,"byte_end":14247652,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247657,"byte_end":14247669,"line_start":311,"line_end":311,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247674,"byte_end":14247677,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247682,"byte_end":14247777,"line_start":313,"line_end":313,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247782,"byte_end":14247803,"line_start":314,"line_end":314,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247808,"byte_end":14247811,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247816,"byte_end":14247830,"line_start":316,"line_end":316,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247835,"byte_end":14247838,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247843,"byte_end":14247850,"line_start":318,"line_end":318,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247855,"byte_end":14247898,"line_start":319,"line_end":319,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247903,"byte_end":14247906,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247911,"byte_end":14247946,"line_start":321,"line_end":321,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247951,"byte_end":14247954,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let n = lock.read().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247959,"byte_end":14247992,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(*n, 1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14247997,"byte_end":14248019,"line_start":324,"line_end":324,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14248024,"byte_end":14248027,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_write().is_err());","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14248032,"byte_end":14248071,"line_start":326,"line_end":326,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14248076,"byte_end":14248083,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250892,"byte_end":14250897,"line_start":408,"line_end":408,"column_start":12,"column_end":17},"name":"write","qualname":"<ShardedLock<T>>::write","value":"fn write(&Self) -> LockResult<ShardedLockWriteGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Locks with exclusive write access, blocking the current thread until it can be acquired.","sig":null,"attributes":[{"value":"/ Locks with exclusive write access, blocking the current thread until it can be acquired.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14249791,"byte_end":14249883,"line_start":378,"line_end":378,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14249888,"byte_end":14249891,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ The calling thread will be blocked until there are no more writers which hold the lock.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14249896,"byte_end":14249987,"line_start":380,"line_end":380,"column_start":5,"column_end":96}},{"value":"/ There may be other readers currently inside the lock when this method returns. This method","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14249992,"byte_end":14250086,"line_start":381,"line_end":381,"column_start":5,"column_end":99}},{"value":"/ does not provide any guarantees with respect to the ordering of whether contentious readers","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250091,"byte_end":14250186,"line_start":382,"line_end":382,"column_start":5,"column_end":100}},{"value":"/ or writers will acquire the lock first.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250191,"byte_end":14250234,"line_start":383,"line_end":383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250239,"byte_end":14250242,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ Returns a guard which will release the exclusive access when dropped.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250247,"byte_end":14250320,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250325,"byte_end":14250328,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250333,"byte_end":14250345,"line_start":387,"line_end":387,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250350,"byte_end":14250353,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method will return an error if the lock is poisoned. A lock gets poisoned when a write","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250358,"byte_end":14250453,"line_start":389,"line_end":389,"column_start":5,"column_end":100}},{"value":"/ operation panics.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250458,"byte_end":14250479,"line_start":390,"line_end":390,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250484,"byte_end":14250487,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250492,"byte_end":14250504,"line_start":392,"line_end":392,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250509,"byte_end":14250512,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ This method might panic when called if the lock is already held by the current thread.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250517,"byte_end":14250607,"line_start":394,"line_end":394,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250612,"byte_end":14250615,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250620,"byte_end":14250634,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250639,"byte_end":14250642,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250647,"byte_end":14250654,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::ShardedLock;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250659,"byte_end":14250702,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250707,"byte_end":14250710,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let lock = ShardedLock::new(1);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250715,"byte_end":14250750,"line_start":401,"line_end":401,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250755,"byte_end":14250758,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ let mut n = lock.write().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250763,"byte_end":14250801,"line_start":403,"line_end":403,"column_start":5,"column_end":43}},{"value":"/ *n = 2;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250806,"byte_end":14250817,"line_start":404,"line_end":404,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250822,"byte_end":14250825,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert!(lock.try_read().is_err());","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250830,"byte_end":14250868,"line_start":406,"line_end":406,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14250873,"byte_end":14250880,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14252019,"byte_end":14252022,"line_start":445,"line_end":445,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ShardedLock<T> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14252948,"byte_end":14252955,"line_start":471,"line_end":471,"column_start":8,"column_end":15},"name":"default","qualname":"<ShardedLock<T> as std::default::Default>::default","value":"fn default() -> ShardedLock<T>","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253076,"byte_end":14253080,"line_start":477,"line_end":477,"column_start":8,"column_end":12},"name":"from","qualname":"<ShardedLock<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3085},"children":[],"decl_id":{"krate":2,"index":3087},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":698},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253231,"byte_end":14253251,"line_start":483,"line_end":483,"column_start":12,"column_end":32},"name":"ShardedLockReadGuard","qualname":"::sync::sharded_lock::ShardedLockReadGuard","value":"ShardedLockReadGuard {  }","parent":null,"children":[{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703}],"decl_id":null,"docs":" A guard used to release the shared read access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the shared read access of a [`ShardedLock`] when dropped.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253134,"byte_end":14253219,"line_start":482,"line_end":482,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253545,"byte_end":14253550,"line_start":494,"line_end":494,"column_start":8,"column_end":13},"name":"deref","qualname":"<ShardedLockReadGuard as std::ops::Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253690,"byte_end":14253693,"line_start":500,"line_end":500,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ShardedLockReadGuard as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253948,"byte_end":14253951,"line_start":508,"line_end":508,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ShardedLockReadGuard as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14254138,"byte_end":14254159,"line_start":514,"line_end":514,"column_start":12,"column_end":33},"name":"ShardedLockWriteGuard","qualname":"::sync::sharded_lock::ShardedLockWriteGuard","value":"ShardedLockWriteGuard {  }","parent":null,"children":[{"krate":0,"index":719},{"krate":0,"index":720}],"decl_id":null,"docs":" A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.\n","sig":null,"attributes":[{"value":"/ A guard used to release the exclusive write access of a [`ShardedLock`] when dropped.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14254037,"byte_end":14254126,"line_start":513,"line_end":513,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":725},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14254396,"byte_end":14254400,"line_start":522,"line_end":522,"column_start":8,"column_end":12},"name":"drop","qualname":"<ShardedLockWriteGuard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14254801,"byte_end":14254804,"line_start":535,"line_end":535,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ShardedLockWriteGuard as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":731},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14255061,"byte_end":14255064,"line_start":543,"line_end":543,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ShardedLockWriteGuard as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10115},"children":[],"decl_id":{"krate":2,"index":10116},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14255236,"byte_end":14255241,"line_start":551,"line_end":551,"column_start":8,"column_end":13},"name":"deref","qualname":"<ShardedLockWriteGuard as std::ops::Deref>::deref","value":"fn deref(&Self) -> &T","parent":{"krate":2,"index":3398},"children":[],"decl_id":{"krate":2,"index":3400},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14255376,"byte_end":14255385,"line_start":557,"line_end":557,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<ShardedLockWriteGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut T","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3412},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":767},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258987,"byte_end":14258996,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"WaitGroup","qualname":"::sync::wait_group::WaitGroup","value":"WaitGroup {  }","parent":null,"children":[{"krate":0,"index":768}],"decl_id":null,"docs":" Enables threads to synchronize the beginning or end of some computation.","sig":null,"attributes":[{"value":"/ Enables threads to synchronize the beginning or end of some computation.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14257625,"byte_end":14257701,"line_start":4,"line_end":4,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14257702,"byte_end":14257705,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ # Wait groups vs barriers","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14257706,"byte_end":14257735,"line_start":6,"line_end":6,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14257736,"byte_end":14257739,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ `WaitGroup` is very similar to [`Barrier`], but there are a few differences:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14257740,"byte_end":14257820,"line_start":8,"line_end":8,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14257821,"byte_end":14257824,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * [`Barrier`] needs to know the number of threads at construction, while `WaitGroup` is cloned to","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14257825,"byte_end":14257926,"line_start":10,"line_end":10,"column_start":1,"column_end":102}},{"value":"/   register more threads.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14257927,"byte_end":14257955,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14257956,"byte_end":14257959,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ * A [`Barrier`] can be reused even after all threads have synchronized, while a `WaitGroup`","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14257960,"byte_end":14258055,"line_start":13,"line_end":13,"column_start":1,"column_end":96}},{"value":"/   synchronizes threads only once.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258056,"byte_end":14258093,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258094,"byte_end":14258097,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ * All threads wait for others to reach the [`Barrier`]. With `WaitGroup`, each thread can choose","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258098,"byte_end":14258198,"line_start":16,"line_end":16,"column_start":1,"column_end":101}},{"value":"/   to either wait for other threads or to continue without blocking.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258199,"byte_end":14258270,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258271,"byte_end":14258274,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258275,"byte_end":14258289,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258290,"byte_end":14258293,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258294,"byte_end":14258301,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258302,"byte_end":14258343,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use std::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258344,"byte_end":14258364,"line_start":23,"line_end":23,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258365,"byte_end":14258368,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ // Create a new wait group.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258369,"byte_end":14258400,"line_start":25,"line_end":25,"column_start":1,"column_end":32}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258401,"byte_end":14258431,"line_start":26,"line_end":26,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258432,"byte_end":14258435,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..4 {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258436,"byte_end":14258455,"line_start":28,"line_end":28,"column_start":1,"column_end":20}},{"value":"/     // Create another reference to the wait group.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258456,"byte_end":14258510,"line_start":29,"line_end":29,"column_start":1,"column_end":55}},{"value":"/     let wg = wg.clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258511,"byte_end":14258539,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258540,"byte_end":14258543,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     thread::spawn(move || {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258544,"byte_end":14258575,"line_start":32,"line_end":32,"column_start":1,"column_end":32}},{"value":"/         // Do some work.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258576,"byte_end":14258604,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258605,"byte_end":14258608,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/         // Drop the reference to the wait group.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258609,"byte_end":14258661,"line_start":35,"line_end":35,"column_start":1,"column_end":53}},{"value":"/         drop(wg);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258662,"byte_end":14258683,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258684,"byte_end":14258695,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258696,"byte_end":14258701,"line_start":38,"line_end":38,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258702,"byte_end":14258705,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Block until all threads have finished their work.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258706,"byte_end":14258762,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/ wg.wait();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258763,"byte_end":14258777,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258778,"byte_end":14258927,"line_start":42,"line_end":42,"column_start":1,"column_end":150}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258928,"byte_end":14258935,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258936,"byte_end":14258939,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`Barrier`]: std::sync::Barrier","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14258940,"byte_end":14258975,"line_start":45,"line_end":45,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":773},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259157,"byte_end":14259164,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"default","qualname":"<WaitGroup as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3157},"children":[],"decl_id":{"krate":2,"index":3158},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259588,"byte_end":14259591,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<WaitGroup>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new wait group and returns the single reference to it.","sig":null,"attributes":[{"value":"/ Creates a new wait group and returns the single reference to it.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259360,"byte_end":14259428,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259433,"byte_end":14259436,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259441,"byte_end":14259455,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259460,"byte_end":14259463,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259468,"byte_end":14259475,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259480,"byte_end":14259521,"line_start":73,"line_end":73,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259526,"byte_end":14259529,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259534,"byte_end":14259564,"line_start":75,"line_end":75,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259569,"byte_end":14259576,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260345,"byte_end":14260349,"line_start":103,"line_end":103,"column_start":12,"column_end":16},"name":"wait","qualname":"<WaitGroup>::wait","value":"fn wait(Self)","parent":null,"children":[],"decl_id":null,"docs":" Drops this reference and waits until all other references are dropped.","sig":null,"attributes":[{"value":"/ Drops this reference and waits until all other references are dropped.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259639,"byte_end":14259713,"line_start":81,"line_end":81,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259718,"byte_end":14259721,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259726,"byte_end":14259740,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259745,"byte_end":14259748,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259753,"byte_end":14259760,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::sync::WaitGroup;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259765,"byte_end":14259806,"line_start":86,"line_end":86,"column_start":5,"column_end":46}},{"value":"/ use std::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259811,"byte_end":14259831,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259836,"byte_end":14259839,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let wg = WaitGroup::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259844,"byte_end":14259874,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259879,"byte_end":14259882,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ thread::spawn({","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259887,"byte_end":14259906,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"/     let wg = wg.clone();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259911,"byte_end":14259939,"line_start":92,"line_end":92,"column_start":5,"column_end":33}},{"value":"/     move || {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259944,"byte_end":14259961,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"/         // Block until both threads have reached `wait()`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259966,"byte_end":14260028,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"/         wg.wait();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260033,"byte_end":14260055,"line_start":95,"line_end":95,"column_start":5,"column_end":27}},{"value":"/     }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260060,"byte_end":14260069,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260074,"byte_end":14260081,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260086,"byte_end":14260089,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ // Block until both threads have reached `wait()`.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260094,"byte_end":14260148,"line_start":99,"line_end":99,"column_start":5,"column_end":59}},{"value":"/ wg.wait();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260153,"byte_end":14260167,"line_start":100,"line_end":100,"column_start":5,"column_end":19}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260172,"byte_end":14260321,"line_start":101,"line_end":101,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260326,"byte_end":14260333,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260687,"byte_end":14260691,"line_start":119,"line_end":119,"column_start":8,"column_end":12},"name":"drop","qualname":"<WaitGroup as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3422},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260905,"byte_end":14260910,"line_start":130,"line_end":130,"column_start":8,"column_end":13},"name":"clone","qualname":"<WaitGroup as std::clone::Clone>::clone","value":"fn clone(&Self) -> WaitGroup","parent":{"krate":2,"index":2801},"children":[],"decl_id":{"krate":2,"index":2802},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14261130,"byte_end":14261133,"line_start":141,"line_end":141,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WaitGroup as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":803},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"thread","qualname":"::thread","value":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":807},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":837},{"krate":0,"index":839},{"krate":0,"index":846},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":860},{"krate":0,"index":895},{"krate":0,"index":900},{"krate":0,"index":862},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":882},{"krate":0,"index":904},{"krate":0,"index":905},{"krate":0,"index":908},{"krate":0,"index":911},{"krate":0,"index":887}],"decl_id":null,"docs":" Threads that can borrow variables from the stack.","sig":null,"attributes":[{"value":"cfg(not(crossbeam_loom))","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":3288,"byte_end":3315,"line_start":101,"line_end":101,"column_start":9,"column_end":36}},{"value":"/ Threads that can borrow variables from the stack.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261326,"byte_end":14261379,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261380,"byte_end":14261383,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Create a scope when spawned threads need to access variables on the stack:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261384,"byte_end":14261462,"line_start":3,"line_end":3,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261463,"byte_end":14261466,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261467,"byte_end":14261474,"line_start":5,"line_end":5,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261475,"byte_end":14261507,"line_start":6,"line_end":6,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261508,"byte_end":14261511,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261512,"byte_end":14261534,"line_start":8,"line_end":8,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261535,"byte_end":14261563,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261564,"byte_end":14261590,"line_start":10,"line_end":10,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261591,"byte_end":14261619,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261620,"byte_end":14261626,"line_start":12,"line_end":12,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261627,"byte_end":14261630,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261631,"byte_end":14261654,"line_start":14,"line_end":14,"column_start":1,"column_end":24}},{"value":"/     for person in &people {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261655,"byte_end":14261686,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/         s.spawn(move |_| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261687,"byte_end":14261717,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/             println!(\"Hello, {}!\", person);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261718,"byte_end":14261765,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/         });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261766,"byte_end":14261781,"line_start":18,"line_end":18,"column_start":1,"column_end":16}},{"value":"/     }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261782,"byte_end":14261791,"line_start":19,"line_end":19,"column_start":1,"column_end":10}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261792,"byte_end":14261808,"line_start":20,"line_end":20,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261809,"byte_end":14261816,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261817,"byte_end":14261820,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Why scoped threads?","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261821,"byte_end":14261846,"line_start":23,"line_end":23,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261847,"byte_end":14261850,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Suppose we wanted to re-write the previous example using plain threads:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261851,"byte_end":14261926,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261927,"byte_end":14261930,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0597","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261931,"byte_end":14261956,"line_start":27,"line_end":27,"column_start":1,"column_end":26}},{"value":"/ use std::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261957,"byte_end":14261977,"line_start":28,"line_end":28,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261978,"byte_end":14261981,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let people = vec![","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14261982,"byte_end":14262004,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/     \"Alice\".to_string(),","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262005,"byte_end":14262033,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/     \"Bob\".to_string(),","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262034,"byte_end":14262060,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/     \"Carol\".to_string(),","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262061,"byte_end":14262089,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/ ];","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262090,"byte_end":14262096,"line_start":34,"line_end":34,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262097,"byte_end":14262100,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let mut threads = Vec::new();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262101,"byte_end":14262134,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262135,"byte_end":14262138,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ for person in &people {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262139,"byte_end":14262166,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/     threads.push(thread::spawn(move || {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262167,"byte_end":14262211,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/         println!(\"Hello, {}!\", person);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262212,"byte_end":14262255,"line_start":40,"line_end":40,"column_start":1,"column_end":44}},{"value":"/     }));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262256,"byte_end":14262268,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262269,"byte_end":14262274,"line_start":42,"line_end":42,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262275,"byte_end":14262278,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ for thread in threads {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262279,"byte_end":14262306,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/     thread.join().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262307,"byte_end":14262338,"line_start":45,"line_end":45,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262339,"byte_end":14262344,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262345,"byte_end":14262352,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262353,"byte_end":14262356,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ This doesn't work because the borrow checker complains about `people` not living long enough:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262357,"byte_end":14262454,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262455,"byte_end":14262458,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262459,"byte_end":14262470,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ error[E0597]: `people` does not live long enough","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262471,"byte_end":14262523,"line_start":52,"line_end":52,"column_start":1,"column_end":53}},{"value":"/   --> src/main.rs:12:20","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262524,"byte_end":14262551,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/    |","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262552,"byte_end":14262560,"line_start":54,"line_end":54,"column_start":1,"column_end":9}},{"value":"/ 12 |     for person in &people {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262561,"byte_end":14262597,"line_start":55,"line_end":55,"column_start":1,"column_end":37}},{"value":"/    |                    ^^^^^^ borrowed value does not live long enough","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262598,"byte_end":14262673,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ ...","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262674,"byte_end":14262681,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ 21 | }","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262682,"byte_end":14262692,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/    | - borrowed value only lives until here","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262693,"byte_end":14262740,"line_start":59,"line_end":59,"column_start":1,"column_end":48}},{"value":"/    |","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262741,"byte_end":14262749,"line_start":60,"line_end":60,"column_start":1,"column_end":9}},{"value":"/    = note: borrowed value must be valid for the static lifetime...","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262750,"byte_end":14262820,"line_start":61,"line_end":61,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262821,"byte_end":14262828,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262829,"byte_end":14262832,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ The problem here is that spawned threads are not allowed to borrow variables on stack because","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262833,"byte_end":14262930,"line_start":64,"line_end":64,"column_start":1,"column_end":98}},{"value":"/ the compiler cannot prove they will be joined before `people` is destroyed.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14262931,"byte_end":14263010,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263011,"byte_end":14263014,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Scoped threads are a mechanism to guarantee to the compiler that spawned threads will be joined","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263015,"byte_end":14263114,"line_start":67,"line_end":67,"column_start":1,"column_end":100}},{"value":"/ before the scope ends.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263115,"byte_end":14263141,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263142,"byte_end":14263145,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # How scoped threads work","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263146,"byte_end":14263175,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263176,"byte_end":14263179,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If a variable is borrowed by a thread, the thread must complete before the variable is","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263180,"byte_end":14263270,"line_start":72,"line_end":72,"column_start":1,"column_end":91}},{"value":"/ destroyed. Threads spawned using [`std::thread::spawn`] can only borrow variables with the","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263271,"byte_end":14263365,"line_start":73,"line_end":73,"column_start":1,"column_end":95}},{"value":"/ `'static` lifetime because the borrow checker cannot be sure when the thread will complete.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263366,"byte_end":14263461,"line_start":74,"line_end":74,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263462,"byte_end":14263465,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ A scope creates a clear boundary between variables outside the scope and threads inside the","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263466,"byte_end":14263561,"line_start":76,"line_end":76,"column_start":1,"column_end":96}},{"value":"/ scope. Whenever a scope spawns a thread, it promises to join the thread before the scope ends.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263562,"byte_end":14263660,"line_start":77,"line_end":77,"column_start":1,"column_end":99}},{"value":"/ This way we guarantee to the borrow checker that scoped threads only live within the scope and","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263661,"byte_end":14263759,"line_start":78,"line_end":78,"column_start":1,"column_end":99}},{"value":"/ can safely access variables outside it.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263760,"byte_end":14263803,"line_start":79,"line_end":79,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263804,"byte_end":14263807,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ # Nesting scoped threads","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263808,"byte_end":14263836,"line_start":81,"line_end":81,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263837,"byte_end":14263840,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ Sometimes scoped threads need to spawn more threads within the same scope. This is a little","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263841,"byte_end":14263936,"line_start":83,"line_end":83,"column_start":1,"column_end":96}},{"value":"/ tricky because argument `s` lives *inside* the invocation of `thread::scope()` and as such","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14263937,"byte_end":14264031,"line_start":84,"line_end":84,"column_start":1,"column_end":95}},{"value":"/ cannot be borrowed by scoped threads:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264032,"byte_end":14264073,"line_start":85,"line_end":85,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264074,"byte_end":14264077,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail,E0373,E0521","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264078,"byte_end":14264109,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264110,"byte_end":14264142,"line_start":88,"line_end":88,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264143,"byte_end":14264146,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264147,"byte_end":14264170,"line_start":90,"line_end":90,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264171,"byte_end":14264192,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/         // Not going to compile because we're trying to borrow `s`,","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264193,"byte_end":14264264,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/         // which lives *inside* the scope! :(","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264265,"byte_end":14264314,"line_start":93,"line_end":93,"column_start":1,"column_end":50}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264315,"byte_end":14264366,"line_start":94,"line_end":94,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264367,"byte_end":14264378,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264379,"byte_end":14264386,"line_start":96,"line_end":96,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264387,"byte_end":14264394,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264395,"byte_end":14264398,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Fortunately, there is a solution. Every scoped thread is passed a reference to its scope as an","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264399,"byte_end":14264497,"line_start":99,"line_end":99,"column_start":1,"column_end":99}},{"value":"/ argument, which can be used for spawning nested threads:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264498,"byte_end":14264558,"line_start":100,"line_end":100,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264559,"byte_end":14264562,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264563,"byte_end":14264570,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264571,"byte_end":14264603,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264604,"byte_end":14264607,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264608,"byte_end":14264631,"line_start":105,"line_end":105,"column_start":1,"column_end":24}},{"value":"/     // Note the `|s|` here.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264632,"byte_end":14264663,"line_start":106,"line_end":106,"column_start":1,"column_end":32}},{"value":"/     s.spawn(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264664,"byte_end":14264685,"line_start":107,"line_end":107,"column_start":1,"column_end":22}},{"value":"/         // Yay, this works because we're using a fresh argument `s`! :)","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264686,"byte_end":14264761,"line_start":108,"line_end":108,"column_start":1,"column_end":76}},{"value":"/         s.spawn(|_| println!(\"nested thread\"));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264762,"byte_end":14264813,"line_start":109,"line_end":109,"column_start":1,"column_end":52}},{"value":"/     });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264814,"byte_end":14264825,"line_start":110,"line_end":110,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264826,"byte_end":14264842,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14264843,"byte_end":14264850,"line_start":112,"line_end":112,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":839},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265905,"byte_end":14265910,"line_start":149,"line_end":149,"column_start":8,"column_end":13},"name":"scope","qualname":"::thread::scope","value":"fn scope<'env, F, R>(F) -> thread::Result<R> where\nF: for<'_> FnOnce(&'_ Scope) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new scope for spawning threads.","sig":null,"attributes":[{"value":"/ Creates a new scope for spawning threads.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265122,"byte_end":14265167,"line_start":128,"line_end":128,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265168,"byte_end":14265171,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ All child threads that haven't been manually joined will be automatically joined just before","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265172,"byte_end":14265268,"line_start":130,"line_end":130,"column_start":1,"column_end":97}},{"value":"/ this function invocation ends. If all joined threads have successfully completed, `Ok` is","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265269,"byte_end":14265362,"line_start":131,"line_end":131,"column_start":1,"column_end":94}},{"value":"/ returned with the return value of `f`. If any of the joined threads has panicked, an `Err` is","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265363,"byte_end":14265460,"line_start":132,"line_end":132,"column_start":1,"column_end":98}},{"value":"/ returned containing errors from panicked threads. Note that if panics are implemented by","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265461,"byte_end":14265553,"line_start":133,"line_end":133,"column_start":1,"column_end":93}},{"value":"/ aborting the process, no error is returned; see the notes of [std::panic::catch_unwind].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265554,"byte_end":14265646,"line_start":134,"line_end":134,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265647,"byte_end":14265650,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265651,"byte_end":14265665,"line_start":136,"line_end":136,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265666,"byte_end":14265669,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265670,"byte_end":14265677,"line_start":138,"line_end":138,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265678,"byte_end":14265710,"line_start":139,"line_end":139,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265711,"byte_end":14265714,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let var = vec![1, 2, 3];","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265715,"byte_end":14265743,"line_start":141,"line_end":141,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265744,"byte_end":14265747,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265748,"byte_end":14265771,"line_start":143,"line_end":143,"column_start":1,"column_end":24}},{"value":"/     s.spawn(|_| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265772,"byte_end":14265793,"line_start":144,"line_end":144,"column_start":1,"column_end":22}},{"value":"/         println!(\"A child thread borrowing `var`: {:?}\", var);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265794,"byte_end":14265860,"line_start":145,"line_end":145,"column_start":1,"column_end":67}},{"value":"/     });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265861,"byte_end":14265872,"line_start":146,"line_end":146,"column_start":1,"column_end":12}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265873,"byte_end":14265889,"line_start":147,"line_end":147,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14265890,"byte_end":14265897,"line_start":148,"line_end":148,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":846},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267220,"byte_end":14267225,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"Scope","qualname":"::thread::Scope","value":"Scope {  }","parent":null,"children":[{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850}],"decl_id":null,"docs":" A scope for spawning threads.\n","sig":null,"attributes":[{"value":"/ A scope for spawning threads.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267175,"byte_end":14267208,"line_start":193,"line_end":193,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269011,"byte_end":14269016,"line_start":246,"line_end":246,"column_start":12,"column_end":17},"name":"spawn","qualname":"<Scope>::spawn","value":"fn spawn<'scope, F, T>(&'scope Self, F) -> ScopedJoinHandle where\nF: for<'_> FnOnce(&'_ Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267590,"byte_end":14267617,"line_start":208,"line_end":208,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267622,"byte_end":14267625,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`spawn`] function in Rust's standard library. The difference","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267630,"byte_end":14267725,"line_start":210,"line_end":210,"column_start":5,"column_end":100}},{"value":"/ is that this thread is scoped, meaning it's guaranteed to terminate before the scope exits,","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267730,"byte_end":14267825,"line_start":211,"line_end":211,"column_start":5,"column_end":100}},{"value":"/ allowing it to reference variables outside the scope.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267830,"byte_end":14267887,"line_start":212,"line_end":212,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267892,"byte_end":14267895,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267900,"byte_end":14267995,"line_start":214,"line_end":214,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268000,"byte_end":14268028,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268033,"byte_end":14268036,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ The returned [handle](ScopedJoinHandle) can be used to manually","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268041,"byte_end":14268108,"line_start":217,"line_end":217,"column_start":5,"column_end":72}},{"value":"/ [join](ScopedJoinHandle::join) the thread before the scope exits.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268113,"byte_end":14268182,"line_start":218,"line_end":218,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268187,"byte_end":14268190,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ This will create a thread using default parameters of [`ScopedThreadBuilder`], if you want to specify the","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268195,"byte_end":14268304,"line_start":220,"line_end":220,"column_start":5,"column_end":114}},{"value":"/ stack size or the name of the thread, use this API instead.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268309,"byte_end":14268372,"line_start":221,"line_end":221,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268377,"byte_end":14268380,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ [`spawn`]: std::thread::spawn","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268385,"byte_end":14268418,"line_start":223,"line_end":223,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268423,"byte_end":14268426,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268431,"byte_end":14268443,"line_start":225,"line_end":225,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268448,"byte_end":14268451,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Panics if the OS fails to create a thread; use [`ScopedThreadBuilder::spawn`]","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268456,"byte_end":14268537,"line_start":227,"line_end":227,"column_start":5,"column_end":86}},{"value":"/ to recover from such errors.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268542,"byte_end":14268574,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268579,"byte_end":14268582,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268587,"byte_end":14268601,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268606,"byte_end":14268609,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268614,"byte_end":14268621,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268626,"byte_end":14268658,"line_start":233,"line_end":233,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268663,"byte_end":14268666,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268671,"byte_end":14268694,"line_start":235,"line_end":235,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268699,"byte_end":14268733,"line_start":236,"line_end":236,"column_start":5,"column_end":39}},{"value":"/         println!(\"A child thread is running\");","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268738,"byte_end":14268788,"line_start":237,"line_end":237,"column_start":5,"column_end":55}},{"value":"/         42","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268793,"byte_end":14268807,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/     });","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268812,"byte_end":14268823,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268828,"byte_end":14268831,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268836,"byte_end":14268887,"line_start":241,"line_end":241,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268892,"byte_end":14268933,"line_start":242,"line_end":242,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268938,"byte_end":14268966,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268971,"byte_end":14268987,"line_start":244,"line_end":244,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14268992,"byte_end":14268999,"line_start":245,"line_end":245,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269641,"byte_end":14269648,"line_start":270,"line_end":270,"column_start":12,"column_end":19},"name":"builder","qualname":"<Scope>::builder","value":"fn builder<'scope>(&'scope Self) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Creates a builder that can configure a thread before spawning.","sig":null,"attributes":[{"value":"/ Creates a builder that can configure a thread before spawning.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269293,"byte_end":14269359,"line_start":257,"line_end":257,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269364,"byte_end":14269367,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269372,"byte_end":14269386,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269391,"byte_end":14269394,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269399,"byte_end":14269406,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269411,"byte_end":14269443,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269448,"byte_end":14269451,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269456,"byte_end":14269479,"line_start":264,"line_end":264,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269484,"byte_end":14269503,"line_start":265,"line_end":265,"column_start":5,"column_end":24}},{"value":"/         .spawn(|_| println!(\"A child thread is running\"))","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269508,"byte_end":14269569,"line_start":266,"line_end":266,"column_start":5,"column_end":66}},{"value":"/         .unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269574,"byte_end":14269596,"line_start":267,"line_end":267,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269601,"byte_end":14269617,"line_start":268,"line_end":268,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269622,"byte_end":14269629,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269868,"byte_end":14269871,"line_start":279,"line_end":279,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Scope as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":895},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271091,"byte_end":14271110,"line_start":317,"line_end":317,"column_start":12,"column_end":31},"name":"ScopedThreadBuilder","qualname":"::thread::ScopedThreadBuilder","value":"ScopedThreadBuilder {  }","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":899}],"decl_id":null,"docs":" Configures the properties of a new thread.","sig":null,"attributes":[{"value":"/ Configures the properties of a new thread.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269963,"byte_end":14270009,"line_start":284,"line_end":284,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270010,"byte_end":14270013,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ The two configurable properties are:","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270014,"byte_end":14270054,"line_start":286,"line_end":286,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270055,"byte_end":14270058,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ - [`name`]: Specifies an [associated name for the thread][naming-threads].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270059,"byte_end":14270137,"line_start":288,"line_end":288,"column_start":1,"column_end":79}},{"value":"/ - [`stack_size`]: Specifies the [desired stack size for the thread][stack-size].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270138,"byte_end":14270222,"line_start":289,"line_end":289,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270223,"byte_end":14270226,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ The [`spawn`] method will take ownership of the builder and return an [`io::Result`] of the","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270227,"byte_end":14270322,"line_start":291,"line_end":291,"column_start":1,"column_end":96}},{"value":"/ thread handle with the given configuration.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270323,"byte_end":14270370,"line_start":292,"line_end":292,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270371,"byte_end":14270374,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ The [`Scope::spawn`] method uses a builder with default configuration and unwraps its return","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270375,"byte_end":14270471,"line_start":294,"line_end":294,"column_start":1,"column_end":97}},{"value":"/ value. You may want to use this builder when you want to recover from a failure to launch a","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270472,"byte_end":14270567,"line_start":295,"line_end":295,"column_start":1,"column_end":96}},{"value":"/ thread.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270568,"byte_end":14270579,"line_start":296,"line_end":296,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270580,"byte_end":14270583,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270584,"byte_end":14270598,"line_start":298,"line_end":298,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270599,"byte_end":14270602,"line_start":299,"line_end":299,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270603,"byte_end":14270610,"line_start":300,"line_end":300,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270611,"byte_end":14270643,"line_start":301,"line_end":301,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270644,"byte_end":14270647,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270648,"byte_end":14270671,"line_start":303,"line_end":303,"column_start":1,"column_end":24}},{"value":"/     s.builder()","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270672,"byte_end":14270691,"line_start":304,"line_end":304,"column_start":1,"column_end":20}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270692,"byte_end":14270750,"line_start":305,"line_end":305,"column_start":1,"column_end":59}},{"value":"/         .unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270751,"byte_end":14270773,"line_start":306,"line_end":306,"column_start":1,"column_end":23}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270774,"byte_end":14270790,"line_start":307,"line_end":307,"column_start":1,"column_end":17}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270791,"byte_end":14270798,"line_start":308,"line_end":308,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270799,"byte_end":14270802,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ [`name`]: ScopedThreadBuilder::name","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270803,"byte_end":14270842,"line_start":310,"line_end":310,"column_start":1,"column_end":40}},{"value":"/ [`stack_size`]: ScopedThreadBuilder::stack_size","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270843,"byte_end":14270894,"line_start":311,"line_end":311,"column_start":1,"column_end":52}},{"value":"/ [`spawn`]: ScopedThreadBuilder::spawn","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270895,"byte_end":14270936,"line_start":312,"line_end":312,"column_start":1,"column_end":42}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270937,"byte_end":14270972,"line_start":313,"line_end":313,"column_start":1,"column_end":36}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14270973,"byte_end":14271021,"line_start":314,"line_end":314,"column_start":1,"column_end":49}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271022,"byte_end":14271062,"line_start":315,"line_end":315,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271869,"byte_end":14271873,"line_start":344,"line_end":344,"column_start":12,"column_end":16},"name":"name","qualname":"<ScopedThreadBuilder>::name","value":"fn name(Self, String) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the name for the new thread.","sig":null,"attributes":[{"value":"/ Sets the name for the new thread.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271251,"byte_end":14271288,"line_start":323,"line_end":323,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271293,"byte_end":14271296,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ The name must not contain null bytes (`\\0`).","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271301,"byte_end":14271349,"line_start":325,"line_end":325,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271354,"byte_end":14271357,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ For more information about named threads, see [here][naming-threads].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271362,"byte_end":14271435,"line_start":327,"line_end":327,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271440,"byte_end":14271443,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271448,"byte_end":14271462,"line_start":329,"line_end":329,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271467,"byte_end":14271470,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271475,"byte_end":14271482,"line_start":331,"line_end":331,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271487,"byte_end":14271519,"line_start":332,"line_end":332,"column_start":5,"column_end":37}},{"value":"/ use std::thread::current;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271524,"byte_end":14271553,"line_start":333,"line_end":333,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271558,"byte_end":14271561,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271566,"byte_end":14271589,"line_start":335,"line_end":335,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271594,"byte_end":14271613,"line_start":336,"line_end":336,"column_start":5,"column_end":24}},{"value":"/         .name(\"my thread\".to_string())","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271618,"byte_end":14271660,"line_start":337,"line_end":337,"column_start":5,"column_end":47}},{"value":"/         .spawn(|_| assert_eq!(current().name(), Some(\"my thread\")))","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271665,"byte_end":14271736,"line_start":338,"line_end":338,"column_start":5,"column_end":76}},{"value":"/         .unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271741,"byte_end":14271763,"line_start":339,"line_end":339,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271768,"byte_end":14271784,"line_start":340,"line_end":340,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271789,"byte_end":14271796,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271801,"byte_end":14271804,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ [naming-threads]: std::thread#naming-threads","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271809,"byte_end":14271857,"line_start":343,"line_end":343,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272578,"byte_end":14272588,"line_start":369,"line_end":369,"column_start":12,"column_end":22},"name":"stack_size","qualname":"<ScopedThreadBuilder>::stack_size","value":"fn stack_size(Self, usize) -> ScopedThreadBuilder","parent":null,"children":[],"decl_id":null,"docs":" Sets the size of the stack for the new thread.","sig":null,"attributes":[{"value":"/ Sets the size of the stack for the new thread.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272009,"byte_end":14272059,"line_start":349,"line_end":349,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272064,"byte_end":14272067,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ The stack size is measured in bytes.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272072,"byte_end":14272112,"line_start":351,"line_end":351,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272117,"byte_end":14272120,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ For more information about the stack size for threads, see [here][stack-size].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272125,"byte_end":14272207,"line_start":353,"line_end":353,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272212,"byte_end":14272215,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272220,"byte_end":14272234,"line_start":355,"line_end":355,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272239,"byte_end":14272242,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272247,"byte_end":14272254,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272259,"byte_end":14272291,"line_start":358,"line_end":358,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272296,"byte_end":14272299,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272304,"byte_end":14272327,"line_start":360,"line_end":360,"column_start":5,"column_end":28}},{"value":"/     s.builder()","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272332,"byte_end":14272351,"line_start":361,"line_end":361,"column_start":5,"column_end":24}},{"value":"/         .stack_size(32 * 1024)","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272356,"byte_end":14272390,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/         .spawn(|_| println!(\"Running a child thread\"))","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272395,"byte_end":14272453,"line_start":363,"line_end":363,"column_start":5,"column_end":63}},{"value":"/         .unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272458,"byte_end":14272480,"line_start":364,"line_end":364,"column_start":5,"column_end":27}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272485,"byte_end":14272501,"line_start":365,"line_end":365,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272506,"byte_end":14272513,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272518,"byte_end":14272521,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ [stack-size]: std::thread#stack-size","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272526,"byte_end":14272566,"line_start":368,"line_end":368,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":867},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273864,"byte_end":14273869,"line_start":411,"line_end":411,"column_start":12,"column_end":17},"name":"spawn","qualname":"<ScopedThreadBuilder>::spawn","value":"fn spawn<F, T>(Self, F) -> io::Result<ScopedJoinHandle> where\nF: for<'_> FnOnce(&'_ Scope) -> T, F: Send + 'env, T: Send + 'env","parent":null,"children":[],"decl_id":null,"docs":" Spawns a scoped thread with this configuration.","sig":null,"attributes":[{"value":"/ Spawns a scoped thread with this configuration.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272729,"byte_end":14272780,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272785,"byte_end":14272788,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The scoped thread is passed a reference to this scope as an argument, which can be used for","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272793,"byte_end":14272888,"line_start":376,"line_end":376,"column_start":5,"column_end":100}},{"value":"/ spawning nested threads.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272893,"byte_end":14272921,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272926,"byte_end":14272929,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ The returned handle can be used to manually join the thread before the scope exits.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14272934,"byte_end":14273021,"line_start":379,"line_end":379,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273026,"byte_end":14273029,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273034,"byte_end":14273046,"line_start":381,"line_end":381,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273051,"byte_end":14273054,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Unlike the [`Scope::spawn`] method, this method yields an","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273059,"byte_end":14273120,"line_start":383,"line_end":383,"column_start":5,"column_end":66}},{"value":"/ [`io::Result`] to capture any failure to create the thread at","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273125,"byte_end":14273190,"line_start":384,"line_end":384,"column_start":5,"column_end":70}},{"value":"/ the OS level.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273195,"byte_end":14273212,"line_start":385,"line_end":385,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273217,"byte_end":14273220,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273225,"byte_end":14273260,"line_start":387,"line_end":387,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273265,"byte_end":14273268,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273273,"byte_end":14273285,"line_start":389,"line_end":389,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273290,"byte_end":14273293,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ Panics if a thread name was set and it contained null bytes.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273298,"byte_end":14273362,"line_start":391,"line_end":391,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273367,"byte_end":14273370,"line_start":392,"line_end":392,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273375,"byte_end":14273389,"line_start":393,"line_end":393,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273394,"byte_end":14273397,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273402,"byte_end":14273409,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273414,"byte_end":14273446,"line_start":396,"line_end":396,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273451,"byte_end":14273454,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273459,"byte_end":14273482,"line_start":398,"line_end":398,"column_start":5,"column_end":28}},{"value":"/     let handle = s.builder()","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273487,"byte_end":14273519,"line_start":399,"line_end":399,"column_start":5,"column_end":37}},{"value":"/         .spawn(|_| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273524,"byte_end":14273548,"line_start":400,"line_end":400,"column_start":5,"column_end":29}},{"value":"/             println!(\"A child thread is running\");","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273553,"byte_end":14273607,"line_start":401,"line_end":401,"column_start":5,"column_end":59}},{"value":"/             42","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273612,"byte_end":14273630,"line_start":402,"line_end":402,"column_start":5,"column_end":23}},{"value":"/         })","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273635,"byte_end":14273649,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/         .unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273654,"byte_end":14273676,"line_start":404,"line_end":404,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273681,"byte_end":14273684,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/     // Join the thread and retrieve its result.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273689,"byte_end":14273740,"line_start":406,"line_end":406,"column_start":5,"column_end":56}},{"value":"/     let res = handle.join().unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273745,"byte_end":14273786,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/     assert_eq!(res, 42);","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273791,"byte_end":14273819,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273824,"byte_end":14273840,"line_start":409,"line_end":409,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14273845,"byte_end":14273852,"line_start":410,"line_end":410,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":875},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276152,"byte_end":14276168,"line_start":477,"line_end":477,"column_start":12,"column_end":28},"name":"ScopedJoinHandle","qualname":"::thread::ScopedJoinHandle","value":"ScopedJoinHandle {  }","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881}],"decl_id":null,"docs":" A handle that can be used to join its scoped thread.","sig":null,"attributes":[{"value":"/ A handle that can be used to join its scoped thread.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14275971,"byte_end":14276027,"line_start":473,"line_end":473,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276028,"byte_end":14276031,"line_start":474,"line_end":474,"column_start":1,"column_end":4}},{"value":"/ This struct is created by the [`Scope::spawn`] method and the","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276032,"byte_end":14276097,"line_start":475,"line_end":475,"column_start":1,"column_end":66}},{"value":"/ [`ScopedThreadBuilder::spawn`] method.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276098,"byte_end":14276140,"line_start":476,"line_end":476,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277612,"byte_end":14277616,"line_start":520,"line_end":520,"column_start":12,"column_end":16},"name":"join","qualname":"<ScopedJoinHandle>::join","value":"fn join(Self) -> thread::Result<T>","parent":null,"children":[],"decl_id":null,"docs":" Waits for the thread to finish and returns its result.","sig":null,"attributes":[{"value":"/ Waits for the thread to finish and returns its result.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276564,"byte_end":14276622,"line_start":492,"line_end":492,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276627,"byte_end":14276630,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ If the child thread panics, an error is returned. Note that if panics are implemented by","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276635,"byte_end":14276727,"line_start":494,"line_end":494,"column_start":5,"column_end":97}},{"value":"/ aborting the process, no error is returned; see the notes of [std::panic::catch_unwind].","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276732,"byte_end":14276824,"line_start":495,"line_end":495,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276829,"byte_end":14276832,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276837,"byte_end":14276849,"line_start":497,"line_end":497,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276854,"byte_end":14276857,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This function may panic on some platforms if a thread attempts to join itself or otherwise","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276862,"byte_end":14276956,"line_start":499,"line_end":499,"column_start":5,"column_end":99}},{"value":"/ may create a deadlock with joining threads.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276961,"byte_end":14277008,"line_start":500,"line_end":500,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277013,"byte_end":14277016,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277021,"byte_end":14277035,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277040,"byte_end":14277043,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277048,"byte_end":14277055,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277060,"byte_end":14277092,"line_start":505,"line_end":505,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277097,"byte_end":14277100,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277105,"byte_end":14277128,"line_start":507,"line_end":507,"column_start":5,"column_end":28}},{"value":"/     let handle1 = s.spawn(|_| println!(\"I'm a happy thread :)\"));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277133,"byte_end":14277202,"line_start":508,"line_end":508,"column_start":5,"column_end":74}},{"value":"/     let handle2 = s.spawn(|_| panic!(\"I'm a sad thread :(\"));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277207,"byte_end":14277272,"line_start":509,"line_end":509,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277277,"byte_end":14277280,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/     // Join the first thread and verify that it succeeded.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277285,"byte_end":14277347,"line_start":511,"line_end":511,"column_start":5,"column_end":67}},{"value":"/     let res = handle1.join();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277352,"byte_end":14277385,"line_start":512,"line_end":512,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_ok());","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277390,"byte_end":14277419,"line_start":513,"line_end":513,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277424,"byte_end":14277427,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/     // Join the second thread and verify that it panicked.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277432,"byte_end":14277494,"line_start":515,"line_end":515,"column_start":5,"column_end":67}},{"value":"/     let res = handle2.join();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277499,"byte_end":14277532,"line_start":516,"line_end":516,"column_start":5,"column_end":38}},{"value":"/     assert!(res.is_err());","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277537,"byte_end":14277567,"line_start":517,"line_end":517,"column_start":5,"column_end":35}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277572,"byte_end":14277588,"line_start":518,"line_end":518,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14277593,"byte_end":14277600,"line_start":519,"line_end":519,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278425,"byte_end":14278431,"line_start":543,"line_end":543,"column_start":12,"column_end":18},"name":"thread","qualname":"<ScopedJoinHandle>::thread","value":"fn thread(&Self) -> &thread::Thread","parent":null,"children":[],"decl_id":null,"docs":" Returns a handle to the underlying thread.","sig":null,"attributes":[{"value":"/ Returns a handle to the underlying thread.","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278064,"byte_end":14278110,"line_start":531,"line_end":531,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278115,"byte_end":14278118,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278123,"byte_end":14278137,"line_start":533,"line_end":533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278142,"byte_end":14278145,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278150,"byte_end":14278157,"line_start":535,"line_end":535,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_utils::thread;","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278162,"byte_end":14278194,"line_start":536,"line_end":536,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278199,"byte_end":14278202,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ thread::scope(|s| {","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278207,"byte_end":14278230,"line_start":538,"line_end":538,"column_start":5,"column_end":28}},{"value":"/     let handle = s.spawn(|_| println!(\"A child thread is running\"));","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278235,"byte_end":14278307,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/     println!(\"The child thread ID: {:?}\", handle.thread().id());","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278312,"byte_end":14278380,"line_start":540,"line_end":540,"column_start":5,"column_end":73}},{"value":"/ }).unwrap();","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278385,"byte_end":14278401,"line_start":541,"line_end":541,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278406,"byte_end":14278413,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278662,"byte_end":14278674,"line_start":553,"line_end":553,"column_start":16,"column_end":28},"name":"as_pthread_t","qualname":"<ScopedJoinHandle as std::os::unix::thread::JoinHandleExt>::as_pthread_t","value":"fn as_pthread_t(&Self) -> RawPthread","parent":{"krate":1,"index":6469},"children":[],"decl_id":{"krate":1,"index":6470},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14279015,"byte_end":14279029,"line_start":559,"line_end":559,"column_start":16,"column_end":30},"name":"into_pthread_t","qualname":"<ScopedJoinHandle as std::os::unix::thread::JoinHandleExt>::into_pthread_t","value":"fn into_pthread_t(Self) -> RawPthread","parent":{"krate":1,"index":6469},"children":[],"decl_id":{"krate":1,"index":6471},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14279881,"byte_end":14279884,"line_start":584,"line_end":584,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ScopedJoinHandle as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10108},"children":[],"decl_id":{"krate":2,"index":10109},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/seq_lock.rs","byte_start":14217874,"byte_end":14217881,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/seq_lock.rs","byte_start":14219526,"byte_end":14219543,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/seq_lock.rs","byte_start":14219868,"byte_end":14219885,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6623,"byte_end":6633,"line_start":49,"line_end":49,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6670,"byte_end":6680,"line_start":50,"line_end":50,"column_start":31,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6735,"byte_end":6745,"line_start":53,"line_end":53,"column_start":24,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6802,"byte_end":6812,"line_start":55,"line_end":55,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6828,"byte_end":6838,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10654,"byte_end":10664,"line_start":187,"line_end":187,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11105,"byte_end":11115,"line_start":206,"line_end":206,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11462,"byte_end":11472,"line_start":223,"line_end":223,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":14502,"byte_end":14512,"line_start":311,"line_end":311,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30342,"byte_end":30352,"line_start":753,"line_end":753,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32879,"byte_end":32889,"line_start":842,"line_end":842,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32998,"byte_end":33008,"line_start":848,"line_end":848,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":33147,"byte_end":33157,"line_start":855,"line_end":855,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":35651,"byte_end":35661,"line_start":917,"line_end":917,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":45570,"byte_end":45579,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50682,"byte_end":50693,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50730,"byte_end":50741,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50757,"byte_end":50768,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51434,"byte_end":51445,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51551,"byte_end":51562,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51676,"byte_end":51687,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51886,"byte_end":51897,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54346,"byte_end":54353,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60582,"byte_end":60589,"line_start":283,"line_end":283,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60833,"byte_end":60840,"line_start":292,"line_end":292,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/once_lock.rs","byte_start":14221731,"byte_end":14221739,"line_start":19,"line_end":19,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/once_lock.rs","byte_start":14221776,"byte_end":14221784,"line_start":20,"line_end":20,"column_start":31,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/once_lock.rs","byte_start":14221800,"byte_end":14221808,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/once_lock.rs","byte_start":14223889,"byte_end":14223897,"line_start":96,"line_end":96,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226008,"byte_end":14226014,"line_start":59,"line_end":59,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226036,"byte_end":14226042,"line_start":61,"line_end":61,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226389,"byte_end":14226395,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229841,"byte_end":14229847,"line_start":208,"line_end":208,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230080,"byte_end":14230088,"line_start":219,"line_end":219,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230113,"byte_end":14230121,"line_start":220,"line_end":220,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230131,"byte_end":14230139,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14232159,"byte_end":14232167,"line_start":294,"line_end":294,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14232290,"byte_end":14232298,"line_start":300,"line_end":300,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14232576,"byte_end":14232581,"line_start":318,"line_end":318,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":585},{"krate":0,"index":586}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239951,"byte_end":14239962,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240015,"byte_end":14240026,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240065,"byte_end":14240076,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240117,"byte_end":14240128,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240144,"byte_end":14240155,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241621,"byte_end":14241632,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14251995,"byte_end":14252006,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":687}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14252544,"byte_end":14252561,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":691}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14252924,"byte_end":14252935,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":694}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253052,"byte_end":14253063,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253428,"byte_end":14253448,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253486,"byte_end":14253506,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253653,"byte_end":14253673,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253911,"byte_end":14253931,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14254300,"byte_end":14254321,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14254358,"byte_end":14254379,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":725}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14254763,"byte_end":14254784,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14255023,"byte_end":14255044,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14255176,"byte_end":14255197,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14255338,"byte_end":14255359,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14256826,"byte_end":14256838,"line_start":606,"line_end":606,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259138,"byte_end":14259147,"line_start":56,"line_end":56,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259344,"byte_end":14259353,"line_start":67,"line_end":67,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260668,"byte_end":14260677,"line_start":118,"line_end":118,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":778}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260886,"byte_end":14260895,"line_start":129,"line_end":129,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":780}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14261111,"byte_end":14261120,"line_start":140,"line_end":140,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":782}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267547,"byte_end":14267552,"line_start":205,"line_end":205,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267572,"byte_end":14267577,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":854},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269849,"byte_end":14269854,"line_start":278,"line_end":278,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271211,"byte_end":14271230,"line_start":322,"line_end":322,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14275892,"byte_end":14275908,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14275943,"byte_end":14275959,"line_start":471,"line_end":471,"column_start":25,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276534,"byte_end":14276550,"line_start":491,"line_end":491,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278621,"byte_end":14278637,"line_start":552,"line_end":552,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":913},{"krate":0,"index":914}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14279848,"byte_end":14279864,"line_start":583,"line_end":583,"column_start":24,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":3076,"byte_end":3082,"line_start":87,"line_end":87,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":57}},{"kind":"Mod","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":3273,"byte_end":3277,"line_start":99,"line_end":99,"column_start":17,"column_end":21},"ref_id":{"krate":0,"index":479}},{"kind":"Mod","span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/lib.rs","byte_start":3332,"byte_end":3338,"line_start":102,"line_end":102,"column_start":17,"column_end":23},"ref_id":{"krate":0,"index":803}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/seq_lock.rs","byte_start":14217874,"byte_end":14217881,"line_start":15,"line_end":15,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":277},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/seq_lock.rs","byte_start":14219526,"byte_end":14219543,"line_start":75,"line_end":75,"column_start":6,"column_end":23},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/seq_lock.rs","byte_start":14219868,"byte_end":14219885,"line_start":87,"line_end":87,"column_start":15,"column_end":32},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":284},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6623,"byte_end":6633,"line_start":49,"line_end":49,"column_start":31,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6670,"byte_end":6680,"line_start":50,"line_end":50,"column_start":31,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6735,"byte_end":6745,"line_start":53,"line_end":53,"column_start":24,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":9128}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6802,"byte_end":6812,"line_start":55,"line_end":55,"column_start":27,"column_end":37},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":9129}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":6828,"byte_end":6838,"line_start":57,"line_end":57,"column_start":9,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":10654,"byte_end":10664,"line_start":187,"line_end":187,"column_start":18,"column_end":28},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11105,"byte_end":11115,"line_start":206,"line_end":206,"column_start":15,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":11462,"byte_end":11472,"line_start":223,"line_end":223,"column_start":20,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":14502,"byte_end":14512,"line_start":311,"line_end":311,"column_start":18,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":30342,"byte_end":30352,"line_start":753,"line_end":753,"column_start":6,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":101},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32879,"byte_end":32889,"line_start":842,"line_end":842,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":32998,"byte_end":33008,"line_start":848,"line_end":848,"column_start":21,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":33147,"byte_end":33157,"line_start":855,"line_end":855,"column_start":43,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":101},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/atomic_cell.rs","byte_start":35651,"byte_end":35661,"line_start":917,"line_end":917,"column_start":6,"column_end":16},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/atomic/consume.rs","byte_start":45570,"byte_end":45579,"line_start":83,"line_end":83,"column_start":47,"column_end":56},"kind":{"Impl":{"id":17}},"from":{"krate":2,"index":9637},"to":{"krate":0,"index":181}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50682,"byte_end":50693,"line_start":132,"line_end":132,"column_start":31,"column_end":42},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50730,"byte_end":50741,"line_start":133,"line_end":133,"column_start":31,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":50757,"byte_end":50768,"line_start":135,"line_end":135,"column_start":9,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51434,"byte_end":51445,"line_start":165,"line_end":165,"column_start":19,"column_end":30},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51551,"byte_end":51562,"line_start":173,"line_end":173,"column_start":22,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51676,"byte_end":51687,"line_start":179,"line_end":179,"column_start":36,"column_end":47},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/cache_padded.rs","byte_start":51886,"byte_end":51897,"line_start":187,"line_end":187,"column_start":21,"column_end":32},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":453},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":54346,"byte_end":54353,"line_start":84,"line_end":84,"column_start":6,"column_end":13},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":242},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60582,"byte_end":60589,"line_start":283,"line_end":283,"column_start":21,"column_end":28},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":242},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/backoff.rs","byte_start":60833,"byte_end":60840,"line_start":292,"line_end":292,"column_start":18,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":242},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/once_lock.rs","byte_start":14221731,"byte_end":14221739,"line_start":19,"line_end":19,"column_start":38,"column_end":46},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":497},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/once_lock.rs","byte_start":14221776,"byte_end":14221784,"line_start":20,"line_end":20,"column_start":31,"column_end":39},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":497},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/once_lock.rs","byte_start":14221800,"byte_end":14221808,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/once_lock.rs","byte_start":14223889,"byte_end":14223897,"line_start":96,"line_end":96,"column_start":18,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":497},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226008,"byte_end":14226014,"line_start":59,"line_end":59,"column_start":22,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226036,"byte_end":14226042,"line_start":61,"line_end":61,"column_start":18,"column_end":24},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14226389,"byte_end":14226395,"line_start":76,"line_end":76,"column_start":6,"column_end":12},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14229841,"byte_end":14229847,"line_start":208,"line_end":208,"column_start":21,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230080,"byte_end":14230088,"line_start":219,"line_end":219,"column_start":22,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":565},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230113,"byte_end":14230121,"line_start":220,"line_end":220,"column_start":22,"column_end":30},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":565},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14230131,"byte_end":14230139,"line_start":222,"line_end":222,"column_start":6,"column_end":14},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":565},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14232159,"byte_end":14232167,"line_start":294,"line_end":294,"column_start":21,"column_end":29},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":565},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14232290,"byte_end":14232298,"line_start":300,"line_end":300,"column_start":16,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":565},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/parker.rs","byte_start":14232576,"byte_end":14232581,"line_start":318,"line_end":318,"column_start":6,"column_end":11},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":580},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14239951,"byte_end":14239962,"line_start":84,"line_end":84,"column_start":40,"column_end":51},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240015,"byte_end":14240026,"line_start":85,"line_end":85,"column_start":47,"column_end":58},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240065,"byte_end":14240076,"line_start":87,"line_end":87,"column_start":32,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":9128}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240117,"byte_end":14240128,"line_start":88,"line_end":88,"column_start":35,"column_end":46},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":9129}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14240144,"byte_end":14240155,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14241621,"byte_end":14241632,"line_start":145,"line_end":145,"column_start":17,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14251995,"byte_end":14252006,"line_start":444,"line_end":444,"column_start":45,"column_end":56},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14252544,"byte_end":14252561,"line_start":457,"line_end":457,"column_start":37,"column_end":54},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14252924,"byte_end":14252935,"line_start":470,"line_end":470,"column_start":30,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253052,"byte_end":14253063,"line_start":476,"line_end":476,"column_start":21,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":660},"to":{"krate":2,"index":3085}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253428,"byte_end":14253448,"line_start":489,"line_end":489,"column_start":40,"column_end":60},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253486,"byte_end":14253506,"line_start":491,"line_end":491,"column_start":27,"column_end":47},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253653,"byte_end":14253673,"line_start":499,"line_end":499,"column_start":36,"column_end":56},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14253911,"byte_end":14253931,"line_start":507,"line_end":507,"column_start":49,"column_end":69},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":10115}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14254300,"byte_end":14254321,"line_start":519,"line_end":519,"column_start":40,"column_end":61},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14254358,"byte_end":14254379,"line_start":521,"line_end":521,"column_start":26,"column_end":47},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14254763,"byte_end":14254784,"line_start":534,"line_end":534,"column_start":36,"column_end":57},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14255023,"byte_end":14255044,"line_start":542,"line_end":542,"column_start":49,"column_end":70},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":10115}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14255176,"byte_end":14255197,"line_start":548,"line_end":548,"column_start":27,"column_end":48},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3398}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14255338,"byte_end":14255359,"line_start":556,"line_end":556,"column_start":30,"column_end":51},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":716},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/sharded_lock.rs","byte_start":14256826,"byte_end":14256838,"line_start":606,"line_end":606,"column_start":15,"column_end":27},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":748},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259138,"byte_end":14259147,"line_start":56,"line_end":56,"column_start":18,"column_end":27},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":3157}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14259344,"byte_end":14259353,"line_start":67,"line_end":67,"column_start":6,"column_end":15},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":767},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260668,"byte_end":14260677,"line_start":118,"line_end":118,"column_start":15,"column_end":24},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":3422}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14260886,"byte_end":14260895,"line_start":129,"line_end":129,"column_start":16,"column_end":25},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":2801}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/sync/wait_group.rs","byte_start":14261111,"byte_end":14261120,"line_start":140,"line_end":140,"column_start":21,"column_end":30},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267547,"byte_end":14267552,"line_start":205,"line_end":205,"column_start":22,"column_end":27},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14267572,"byte_end":14267577,"line_start":207,"line_end":207,"column_start":12,"column_end":17},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":846},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14269849,"byte_end":14269854,"line_start":278,"line_end":278,"column_start":21,"column_end":26},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":846},"to":{"krate":2,"index":10108}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14271211,"byte_end":14271230,"line_start":322,"line_end":322,"column_start":20,"column_end":39},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":895},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14275892,"byte_end":14275908,"line_start":470,"line_end":470,"column_start":25,"column_end":41},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":3179}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14275943,"byte_end":14275959,"line_start":471,"line_end":471,"column_start":25,"column_end":41},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14276534,"byte_end":14276550,"line_start":491,"line_end":491,"column_start":9,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":875},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14278621,"byte_end":14278637,"line_start":552,"line_end":552,"column_start":35,"column_end":51},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":875},"to":{"krate":1,"index":6469}},{"span":{"file_name":"/home/kobruh/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-utils-0.8.12/src/thread.rs","byte_start":14279848,"byte_end":14279864,"line_start":583,"line_end":583,"column_start":24,"column_end":40},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":875},"to":{"krate":2,"index":10108}}]}